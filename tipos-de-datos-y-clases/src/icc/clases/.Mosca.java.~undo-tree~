(undo-tree-save-format-version . 1)
"f05563587e96bf3edc5109c1838320a283871a08"
[nil nil nil nil (25220 27278 211369 428000) 0 nil]
([nil nil ((#("(" 0 1 (fontified t face font-lock-string-face)) . 1714) (undo-tree-id2 . 1) (undo-tree-id3 . -1) (t 25220 22815 759816 268000)) nil (25220 27278 211365 97000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face font-lock-string-face)) . 1714)) nil (25220 27278 211357 28000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . 1714)) nil (25220 27278 211353 38000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-string-face)) . 1714) (undo-tree-id0 . 1) (undo-tree-id1 . -1)) nil (25220 27278 211343 302000) 0 nil])
([nil nil ((1741 . 1744) (t 25220 27278 224685 399000) 1740) nil (25220 27339 457799 582000) 0 nil])
([nil nil ((1744 . 1763)) nil (25220 27339 457795 979000) 0 nil])
([nil nil ((1760 . 1770) (#("rep" 0 3 (fontified nil)) . 1760) (1760 . 1763) (#("replaceAll(String regex, String replacement) : String" 0 53 (fontified nil)) . -1760) (1760 . 1813) (#("rep" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1760) (undo-tree-id13 . -3) (undo-tree-id14 . -3) 1763) nil (25220 27339 457792 71000) 0 nil])
([nil nil ((1770 . 1771)) nil (25220 27339 457783 336000) 0 nil])
([nil nil ((1771 . 1772)) nil (25220 27339 457780 848000) 0 nil])
([nil nil ((1773 . 1774) (nil syntax-table nil 1773 . 1774) (nil syntax-table (1) 1771 . 1772) (1772 . 1773) (nil syntax-table nil 1772 . 1773) (nil syntax-table (1) 1771 . 1772)) nil (25220 27339 457777 363000) 0 nil])
([nil nil ((1774 . 1775)) nil (25220 27339 457772 168000) 0 nil])
([nil nil ((1775 . 1776)) nil (25220 27339 457770 30000) 0 nil])
([nil nil ((1775 . 1783)) nil (25220 27339 457767 358000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1782) (undo-tree-id12 . -1) 1783) nil (25220 27339 457764 287000) 0 nil])
([nil nil ((1782 . 1784)) nil (25220 27339 457759 495000) 0 nil])
([nil nil ((1784 . 1786)) nil (25220 27339 457757 405000) 0 nil])
([nil nil ((1783 . 1790) (#("valueOf(Object obj) : String" 0 28 (fontified nil)) . -1783) (1783 . 1811) (#("val" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1783) (undo-tree-id10 . -3) (undo-tree-id11 . -3) 1786) nil (25220 27339 457753 108000) 0 nil])
([nil nil ((1790 . 1791)) nil (25220 27339 457744 934000) 0 nil])
([nil nil ((1791 . 1793)) nil (25220 27339 457742 605000) 0 nil])
([nil nil ((1793 . 1794)) nil (25220 27339 457740 68000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1793) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 1794) nil (25220 27339 457736 821000) 0 nil])
([nil nil ((1793 . 1794)) nil (25220 27339 457728 319000) 0 nil])
([nil nil ((1794 . 1795)) nil (25220 27339 457725 969000) 0 nil])
([nil nil ((1791 . 1796) (#("v" 0 1 (fontified nil)) . 1791) (1791 . 1792) (#("vocal : char" 0 12 (fontified nil)) . -1791) (1791 . 1803) (#("voca" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1791) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -2) 1795) nil (25220 27339 457720 686000) 0 nil])
([nil nil ((1796 . 1798)) nil (25220 27339 457689 607000) 0 nil])
([nil nil ((1798 . 1799)) nil (25220 27339 457676 399000) 0 nil])
([nil nil ((1797 . 1798) (t 25220 27339 473341 735000)) nil (25220 27359 569387 451000) 0 nil])
([nil nil ((1798 . 1801)) nil (25220 27359 569384 685000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1800) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1801) nil (25220 27359 569381 243000) 0 nil])
([nil nil ((1800 . 1801)) nil (25220 27359 569370 523000) 0 nil])
([nil nil ((1801 . 1802)) nil (25220 27359 569367 937000) 0 nil])
([nil nil ((1798 . 1809) (#("toUpperCase() : String" 0 22 (fontified nil)) . -1798) (1798 . 1820) (#("toUp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1798) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -3) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) 1802) nil (25220 27359 569361 853000) 0 nil])
([nil nil ((1809 . 1811)) nil (25220 27359 569305 274000) 0 nil])
([nil nil ((#("		 */
" 0 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 6 (c-in-sws t fontified t)) . 1918) (undo-tree-id323 . -4) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . 1) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) 1922 (t 25220 27359 589557 225000)) nil (25220 29970 684295 675000) 0 nil])
([nil nil ((#("		 * Lo encontré aquí: https://bit.ly/3nvFYPR
" 0 29 (c-in-sws t fontified t face font-lock-comment-face) 29 30 (c-in-sws t fontified t face font-lock-comment-face c-is-sws t) 30 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (fontified t face font-lock-comment-face c-in-sws t)) . 1872) (undo-tree-id186 . -4) (undo-tree-id187 . -41) (undo-tree-id188 . -41) (undo-tree-id189 . -41) (undo-tree-id190 . -41) (undo-tree-id191 . -41) (undo-tree-id192 . -41) (undo-tree-id193 . -41) (undo-tree-id194 . -41) (undo-tree-id195 . -42) (undo-tree-id196 . -42) (undo-tree-id197 . -42) (undo-tree-id198 . -42) (undo-tree-id199 . -42) (undo-tree-id200 . -42) (undo-tree-id201 . -42) (undo-tree-id202 . -42) (undo-tree-id203 . -43) (undo-tree-id204 . -43) (undo-tree-id205 . -43) (undo-tree-id206 . -43) (undo-tree-id207 . -43) (undo-tree-id208 . -43) (undo-tree-id209 . -43) (undo-tree-id210 . -43) (undo-tree-id211 . -44) (undo-tree-id212 . -44) (undo-tree-id213 . -44) (undo-tree-id214 . -44) (undo-tree-id215 . -44) (undo-tree-id216 . -44) (undo-tree-id217 . -44) (undo-tree-id218 . -44) (undo-tree-id219 . -45) (undo-tree-id220 . -45) (undo-tree-id221 . -45) (undo-tree-id222 . -45) (undo-tree-id223 . -45) (undo-tree-id224 . -45) (undo-tree-id225 . -45) (undo-tree-id226 . -45) (undo-tree-id227 . -45) (undo-tree-id228 . -45) (undo-tree-id229 . -45) (undo-tree-id230 . -45) (undo-tree-id231 . -45) (undo-tree-id232 . -45) (undo-tree-id233 . -45) (undo-tree-id234 . -46) (undo-tree-id235 . -46) (undo-tree-id236 . -46) (undo-tree-id237 . -46) (undo-tree-id238 . -46) (undo-tree-id239 . -46) (undo-tree-id240 . -46) (undo-tree-id241 . -46) (undo-tree-id242 . -46) (undo-tree-id243 . -46) (undo-tree-id244 . -46) (undo-tree-id245 . -46) (undo-tree-id246 . -46) (undo-tree-id247 . -46) (undo-tree-id248 . -46) (undo-tree-id249 . -46) (undo-tree-id250 . -46) (undo-tree-id251 . -46) (undo-tree-id252 . -46) (undo-tree-id253 . -46) (undo-tree-id254 . -46) (undo-tree-id255 . -46) (undo-tree-id256 . -46) (undo-tree-id257 . -46) (undo-tree-id258 . -46) (undo-tree-id259 . -46) (undo-tree-id260 . -46) (undo-tree-id261 . -46) (undo-tree-id262 . -46) (undo-tree-id263 . -46) (undo-tree-id264 . -46) (undo-tree-id265 . -46) (undo-tree-id266 . -46) (undo-tree-id267 . -46) (undo-tree-id268 . -46) (undo-tree-id269 . -46) (undo-tree-id270 . -46) (undo-tree-id271 . -46) (undo-tree-id272 . -46) (undo-tree-id273 . -46) (undo-tree-id274 . -46) (undo-tree-id275 . -46) (undo-tree-id276 . -46) (undo-tree-id277 . -46) (undo-tree-id278 . -46) (undo-tree-id279 . -46) (undo-tree-id280 . -46) (undo-tree-id281 . -46) (undo-tree-id282 . -46) (undo-tree-id283 . -46) (undo-tree-id284 . -46) (undo-tree-id285 . -46) (undo-tree-id286 . -46) (undo-tree-id287 . -46) (undo-tree-id288 . -46) (undo-tree-id289 . -46) (undo-tree-id290 . -46) (undo-tree-id291 . -46) (undo-tree-id292 . -46) (undo-tree-id293 . -46) (undo-tree-id294 . -46) (undo-tree-id295 . -46) (undo-tree-id296 . -46) (undo-tree-id297 . -46) (undo-tree-id298 . -46) (undo-tree-id299 . -46) (undo-tree-id300 . -46) (undo-tree-id301 . -46) (undo-tree-id302 . -46) (undo-tree-id303 . -46) (undo-tree-id304 . -46) (undo-tree-id305 . -46) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) 1876) nil (25220 29970 684134 72000) 0 nil])
([nil current ((#("		/* (?i) Sirve para ignorar si es mayúscula o minúscula
" 0 2 (c-in-sws t c-is-sws t fontified t) 2 3 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 56 (c-in-sws t fontified t face font-lock-comment-face) 56 57 (fontified t face font-lock-comment-face)) . 1815) (undo-tree-id32 . -4) (undo-tree-id33 . -57) (undo-tree-id34 . -57) (undo-tree-id35 . -57) (undo-tree-id36 . -57) (undo-tree-id37 . -57) (undo-tree-id38 . -57) (undo-tree-id39 . -57) (undo-tree-id40 . -57) (undo-tree-id41 . -57) (undo-tree-id42 . -57) (undo-tree-id43 . -57) (undo-tree-id44 . -57) (undo-tree-id45 . -57) (undo-tree-id46 . -57) (undo-tree-id47 . -57) (undo-tree-id48 . -57) (undo-tree-id49 . -57) (undo-tree-id50 . -57) (undo-tree-id51 . -57) (undo-tree-id52 . -57) (undo-tree-id53 . -57) (undo-tree-id54 . -57) (undo-tree-id55 . -57) (undo-tree-id56 . -57) (undo-tree-id57 . -57) (undo-tree-id58 . -57) (undo-tree-id59 . -57) (undo-tree-id60 . -57) (undo-tree-id61 . -57) (undo-tree-id62 . -57) (undo-tree-id63 . -57) (undo-tree-id64 . -57) (undo-tree-id65 . -57) (undo-tree-id66 . -57) (undo-tree-id67 . -57) (undo-tree-id68 . -57) (undo-tree-id69 . -57) (undo-tree-id70 . -57) (undo-tree-id71 . -57) (undo-tree-id72 . -57) (undo-tree-id73 . -57) (undo-tree-id74 . -57) (undo-tree-id75 . -57) (undo-tree-id76 . -57) (undo-tree-id77 . -57) (undo-tree-id78 . -57) (undo-tree-id79 . -57) (undo-tree-id80 . -57) (undo-tree-id81 . -57) (undo-tree-id82 . -57) (undo-tree-id83 . -57) (undo-tree-id84 . -57) (undo-tree-id85 . -57) (undo-tree-id86 . -57) (undo-tree-id87 . -57) (undo-tree-id88 . -57) (undo-tree-id89 . -57) (undo-tree-id90 . -57) (undo-tree-id91 . -57) (undo-tree-id92 . -57) (undo-tree-id93 . -57) (undo-tree-id94 . -57) (undo-tree-id95 . -57) (undo-tree-id96 . -57) (undo-tree-id97 . -57) (undo-tree-id98 . -57) (undo-tree-id99 . -57) (undo-tree-id100 . -57) (undo-tree-id101 . -57) (undo-tree-id102 . -57) (undo-tree-id103 . -57) (undo-tree-id104 . -57) (undo-tree-id105 . -57) (undo-tree-id106 . -57) (undo-tree-id107 . -57) (undo-tree-id108 . -57) (undo-tree-id109 . -57) (undo-tree-id110 . -57) (undo-tree-id111 . -57) (undo-tree-id112 . -57) (undo-tree-id113 . -57) (undo-tree-id114 . -57) (undo-tree-id115 . -57) (undo-tree-id116 . -57) (undo-tree-id117 . -57) (undo-tree-id118 . -57) (undo-tree-id119 . -57) (undo-tree-id120 . -57) (undo-tree-id121 . -57) (undo-tree-id122 . -57) (undo-tree-id123 . -57) (undo-tree-id124 . -57) (undo-tree-id125 . -57) (undo-tree-id126 . -57) (undo-tree-id127 . -57) (undo-tree-id128 . -57) (undo-tree-id129 . -57) (undo-tree-id130 . -57) (undo-tree-id131 . -57) (undo-tree-id132 . -57) (undo-tree-id133 . -57) (undo-tree-id134 . -57) (undo-tree-id135 . -57) (undo-tree-id136 . -57) (undo-tree-id137 . -57) (undo-tree-id138 . -57) (undo-tree-id139 . -57) (undo-tree-id140 . -57) (undo-tree-id141 . -57) (undo-tree-id142 . -57) (undo-tree-id143 . -57) (undo-tree-id144 . -57) (undo-tree-id145 . -57) (undo-tree-id146 . -57) (undo-tree-id147 . -57) (undo-tree-id148 . -57) (undo-tree-id149 . -57) (undo-tree-id150 . -57) (undo-tree-id151 . -57) (undo-tree-id152 . -57) (undo-tree-id153 . -57) (undo-tree-id154 . -57) (undo-tree-id155 . -57) (undo-tree-id156 . -57) (undo-tree-id157 . -57) (undo-tree-id158 . -57) (undo-tree-id159 . -57) (undo-tree-id160 . -57) (undo-tree-id161 . -57) (undo-tree-id162 . -57) (undo-tree-id163 . -57) (undo-tree-id164 . -57) (undo-tree-id165 . -57) (undo-tree-id166 . -57) (undo-tree-id167 . -57) (undo-tree-id168 . -57) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) 1819) nil (25220 29970 683858 733000) 0 nil])
nil
