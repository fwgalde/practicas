(undo-tree-save-format-version . 1)
"65bcdffe0dbae666fec4855b679a4af469f07900"
[nil nil nil nil (25220 24273 728556 102000) 0 nil]
([nil nil ((1371 . 1372) (#("referenc" 0 8 (fontified t face font-lock-variable-name-face)) . 1371) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (1380 . 1384) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 1380) (1473 . 1474) (#("referenc" 0 8 (fontified t)) . 1473) (1482 . 1486) (#("a" 0 1 (fontified t)) . 1482) (1521 . 1522) (#("referenc" 0 8 (fontified t)) . 1521) (1530 . 1534) (#("a" 0 1 (fontified t)) . 1530) 1372 (t 25220 22769 49298 329000)) nil (25220 24273 728549 739000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -1438) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 1439) nil (25220 24273 728529 186000) 0 nil])
([nil nil ((1438 . 1440)) nil (25220 24273 728379 123000) 0 nil])
([nil nil ((1412 . 1414) (t 25220 24273 742812 355000)) nil (25220 24399 161361 343000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1413) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 1414 (t 25220 24399 175177 412000)) nil (25220 24411 833202 102000) 0 nil])
([nil nil ((1413 . 1414)) nil (25220 24411 832470 222000) 0 nil])
([nil nil ((1438 . 1439) (t 25220 24411 847315 322000)) nil (25220 24429 45429 172000) 0 nil])
([nil nil ((1439 . 1440)) nil (25220 24429 45424 507000) 0 nil])
([nil nil ((1446 . 1447)) nil (25220 24429 45412 889000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t face font-lock-negation-char-face)) . -1438) (undo-tree-id245 . -1) 1439 (t 25220 24429 60502 651000)) nil (25220 24439 675034 170000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1438) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 1439) nil (25220 24439 675026 978000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1444) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . 1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 1445) nil (25220 24439 674743 985000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1440) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("=" 0 1 (fontified t)) . -1441) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 1442) nil (25220 24439 674708 472000) 0 nil])
([nil nil ((1440 . 1441)) nil (25220 24439 674528 492000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -1483) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) 1484 (t 25220 24439 689618 327000)) nil (25220 24472 965083 243000) 0 nil])
([nil nil ((#("i<" 0 2 (fontified t)) . -1481) (undo-tree-id526 . -2) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) (undo-tree-id552 . -2) (undo-tree-id553 . -2) (undo-tree-id554 . -2) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) 1483) nil (25220 24472 965057 512000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1477) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (#("&" 0 1 (fontified t)) . -1478) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("&" 0 1 (fontified t)) . -1479) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#(" " 0 1 (fontified t)) . -1480) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 1481) nil (25220 24472 964919 822000) 0 nil])
([nil nil ((1468 . 1469) (t 25220 24473 980 849000)) nil (25220 24493 20058 35000) 0 nil])
([nil nil ((1480 . 1482) (#(" " 0 1 (fontified nil)) . 1479) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (1480 . 1481)) nil (25220 24493 20047 268000) 0 nil])
([nil nil ((1519 . 1521) (#(" " 0 1 (fontified nil)) . 1518) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (1519 . 1520) (t 25220 24493 36198 887000)) nil (25220 24495 748443 148000) 0 nil])
([nil nil ((1527 . 1532) (#("	    " 0 5 (fontified nil)) . 1526) (undo-tree-id626 . -5) (1531 . 1532) (t 25220 24495 765228 586000)) nil (25220 24532 749710 494000) 0 nil])
([nil nil ((1488 . 1493) (#("	    " 0 5 (fontified nil)) . 1487) (undo-tree-id625 . -5) (1492 . 1493)) nil (25220 24532 749703 891000) 0 nil])
([nil nil ((1448 . 1453) (#("	    " 0 5 (fontified nil)) . 1447) (undo-tree-id624 . -5) (1452 . 1453)) nil (25220 24532 749698 206000) 0 nil])
([nil nil ((1447 . 1452)) nil (25220 24532 749692 764000) 0 nil])
([nil nil ((1452 . 1454)) nil (25220 24532 749690 160000) 0 nil])
([nil nil ((1454 . 1460)) nil (25220 24532 749687 886000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1454) (undo-tree-id618 . -1) (#("i" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1455) (undo-tree-id619 . -1) (#("r" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1456) (undo-tree-id620 . -1) (#("m" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1457) (undo-tree-id621 . -1) (#("e" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1458) (undo-tree-id622 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1459) (undo-tree-id623 . -1) 1460) nil (25220 24532 749682 139000) 0 nil])
([nil nil ((1454 . 1466)) nil (25220 24532 749664 821000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1465) (undo-tree-id617 . -1) 1466) nil (25220 24532 749661 791000) 0 nil])
([nil nil ((1465 . 1466)) nil (25220 24532 749656 875000) 0 nil])
([nil nil ((1466 . 1472)) nil (25220 24532 749654 220000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -1470) (undo-tree-id615 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -1471) (undo-tree-id616 . -1) 1472) nil (25220 24532 749650 106000) 0 nil])
([nil nil ((1470 . 1475)) nil (25220 24532 749641 891000) 0 nil])
([nil nil ((#("cuando " 0 2 (fontified t c-in-sws t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face c-in-sws t) 3 4 (fontified t face font-lock-comment-face c-in-sws t) 4 5 (fontified t face font-lock-comment-face c-in-sws t) 5 6 (fontified t face font-lock-comment-face c-in-sws t) 6 7 (fontified t face font-lock-comment-face c-in-sws t)) . -1468) (undo-tree-id614 . -7) 1475) nil (25220 24532 749638 144000) 0 nil])
([nil nil ((#("de " 0 1 (fontified t c-in-sws t face font-lock-comment-face) 1 2 (fontified t c-in-sws t face font-lock-comment-face) 2 3 (fontified t c-in-sws t face font-lock-comment-face)) . -1465) (undo-tree-id613 . -3) 1468) nil (25220 24532 749631 819000) 0 nil])
([nil nil ((#("Condición " 0 1 (fontified t c-in-sws t face font-lock-comment-face) 1 2 (fontified t c-in-sws t face font-lock-comment-face) 2 3 (fontified t c-in-sws t face font-lock-comment-face) 3 4 (fontified t c-in-sws t face font-lock-comment-face) 4 5 (fontified t c-in-sws t face font-lock-comment-face) 5 6 (fontified t c-in-sws t face font-lock-comment-face) 6 7 (fontified t c-in-sws t face font-lock-comment-face) 7 8 (fontified t c-in-sws t face font-lock-comment-face) 8 9 (fontified t c-in-sws t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face)) . -1455) (undo-tree-id612 . -10) 1465) nil (25220 24532 749625 547000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-in-sws t c-is-sws t)) . -1452) (undo-tree-id609 . -1) (#("/" 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1453) (undo-tree-id610 . -1) (#(" " 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1454) (undo-tree-id611 . -1) 1455) nil (25220 24532 749618 196000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1446) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) 1447) nil (25220 24532 749600 224000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1532) (t 25220 24532 767631 283000)) nil (25220 24540 340869 167000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1492)) nil (25220 24540 340856 745000) 0 nil])
([nil nil ((1522 . 1532) (t 25220 24540 360713 918000)) nil (25220 24640 935187 722000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1528) (undo-tree-id693 . -1) (#("g" 0 1 (fontified t)) . -1529) (undo-tree-id694 . -1) (#("l" 0 1 (fontified t)) . -1530) (undo-tree-id695 . -1) (#("o" 0 1 (fontified t)) . -1531) (undo-tree-id696 . -1) 1532) nil (25220 24640 935183 201000) 0 nil])
([nil nil ((1528 . 1529)) nil (25220 24640 935172 265000) 0 nil])
([nil nil ((1526 . 1533) (#("arr" 0 3 (fontified nil)) . 1526) (1526 . 1529) (#("arreglo : int[]" 0 15 (fontified nil)) . -1526) (1526 . 1541) (#("arr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1526) (undo-tree-id691 . -3) (undo-tree-id692 . -3) 1529) nil (25220 24640 935168 360000) 0 nil])
([nil nil ((1533 . 1535)) nil (25220 24640 935159 727000) 0 nil])
([nil nil ((1535 . 1536)) nil (25220 24640 935157 570000) 0 nil])
([nil nil ((1536 . 1539)) nil (25220 24640 935155 435000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -1537) (undo-tree-id689 . -1) (#(" " 0 1 (fontified t)) . -1538) (undo-tree-id690 . -1) 1539) nil (25220 24640 935152 146000) 0 nil])
([nil nil ((1537 . 1541)) nil (25220 24640 935143 296000) 0 nil])
([nil nil ((1541 . 1542)) nil (25220 24640 935140 427000) 0 nil])
([nil nil ((1539 . 1545) (#("piv" 0 3 (fontified nil)) . 1539) (1539 . 1542) (#("pivote : int" 0 12 (fontified nil)) . -1539) (1539 . 1551) (#("piv" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1539) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) 1542) nil (25220 24640 935124 839000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1562) (undo-tree-id765 . -1) (#(" " 0 1 (fontified t)) . -1563) (undo-tree-id766 . -1) (#("<" 0 1 (fontified t)) . -1564) (undo-tree-id767 . -1) (#(" " 0 1 (fontified t)) . -1565) (undo-tree-id768 . -1) (#("j" 0 1 (fontified t face font-lock-type-face)) . -1566) (undo-tree-id769 . -1) 1567 (t 25220 24640 956808 693000)) nil (25220 24711 519487 798000) 0 nil])
([nil nil ((1562 . 1567)) nil (25220 24711 519474 606000) 0 nil])
([nil nil ((1562 . 1569) (#("arre" 0 4 (fontified nil)) . 1562) (1562 . 1566) (#("arreglo : int[]" 0 15 (fontified nil)) . -1562) (1562 . 1577) (#("arreg" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1562) (undo-tree-id763 . -5) (undo-tree-id764 . -5) 1567) nil (25220 24711 519470 819000) 0 nil])
([nil nil ((1569 . 1584)) nil (25220 24711 519461 824000) 0 nil])
([nil nil ((1584 . 1592)) nil (25220 24711 519459 530000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1589) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (#("g" 0 1 (fontified t)) . -1590) (undo-tree-id761 . -1) (#("o" 0 1 (fontified t)) . -1591) (undo-tree-id762 . -1) 1592) nil (25220 24711 519455 404000) 0 nil])
([nil nil ((1589 . 1590)) nil (25220 24711 519444 699000) 0 nil])
([nil nil ((1585 . 1592) (#("arre" 0 4 (fontified nil)) . 1585) (1585 . 1589) (#("arreglo : int[]" 0 15 (fontified nil)) . -1585) (1585 . 1600) (#("arreg" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1585) (undo-tree-id757 . -5) (undo-tree-id758 . -5) 1590) nil (25220 24711 519440 657000) 0 nil])
([nil nil ((1592 . 1596)) nil (25220 24711 519431 416000) 0 nil])
([nil nil ((1596 . 1605)) nil (25220 24711 519428 440000) 0 nil])
([nil nil ((1599 . 1605) (#("pivote" 0 6 (fontified nil)) . 1599) (1599 . 1605) (#("pivote : int" 0 12 (fontified nil)) . -1599) (1599 . 1611) (#("pivote" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1599) (undo-tree-id697 . -6) (undo-tree-id698 . -6) (undo-tree-id699 . -6) (undo-tree-id700 . -6) (undo-tree-id701 . -6) (undo-tree-id702 . -6) (undo-tree-id703 . -6) (undo-tree-id704 . -6) (undo-tree-id705 . -6) (undo-tree-id706 . -6) (undo-tree-id707 . -6) (undo-tree-id708 . -6) (undo-tree-id709 . -6) (undo-tree-id710 . -6) (undo-tree-id711 . -6) (undo-tree-id712 . -6) (undo-tree-id713 . -6) (undo-tree-id714 . -6) (undo-tree-id715 . -6) (undo-tree-id716 . -6) (undo-tree-id717 . -6) (undo-tree-id718 . -6) (undo-tree-id719 . -6) (undo-tree-id720 . -6) (undo-tree-id721 . -6) (undo-tree-id722 . -6) (undo-tree-id723 . -6) (undo-tree-id724 . -6) (undo-tree-id725 . -6) (undo-tree-id726 . -6) (undo-tree-id727 . -6) (undo-tree-id728 . -6) (undo-tree-id729 . -6) (undo-tree-id730 . -6) (undo-tree-id731 . -6) (undo-tree-id732 . -6) (undo-tree-id733 . -6) (undo-tree-id734 . -6) (undo-tree-id735 . -6) (undo-tree-id736 . -6) (undo-tree-id737 . -6) (undo-tree-id738 . -6) (undo-tree-id739 . -6) (undo-tree-id740 . -6) (undo-tree-id741 . -6) (undo-tree-id742 . -6) (undo-tree-id743 . -6) (undo-tree-id744 . -6) (undo-tree-id745 . -6) (undo-tree-id746 . -6) (undo-tree-id747 . -6) (undo-tree-id748 . -6) (undo-tree-id749 . -6) (undo-tree-id750 . -6) (undo-tree-id751 . -6) (undo-tree-id752 . -6) (undo-tree-id753 . -6) (undo-tree-id754 . -6) (undo-tree-id755 . -6) (undo-tree-id756 . -6) 1605) nil (25220 24711 519412 769000) 0 nil])
([nil nil ((#("inicio]) {
	      " 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-3-face)) 10 11 (fontified t) 11 12 (fontified t) 12 18 (fontified t)) . -1675) (undo-tree-id2572 . -18) (undo-tree-id2573 . -11) (undo-tree-id2574 . -18) (undo-tree-id2575 . -18) (undo-tree-id2576 . -18) (undo-tree-id2577 . -18) (undo-tree-id2578 . -18) (undo-tree-id2579 . -18) (undo-tree-id2580 . -18) (undo-tree-id2581 . -18) (undo-tree-id2582 . -18) (undo-tree-id2583 . -18) (undo-tree-id2584 . -18) (undo-tree-id2585 . -18) (undo-tree-id2586 . -18) (undo-tree-id2587 . -18) (undo-tree-id2588 . -18) (undo-tree-id2589 . -18) (undo-tree-id2590 . -18) (undo-tree-id2591 . -18) 1693 (#(" " 0 1 (fontified t)) . -1693) (undo-tree-id2592 . -1) (#(" " 0 1 (fontified nil)) . -1694) (undo-tree-id2593 . -1) (#("	" 0 1 (fontified nil)) . 1695) (undo-tree-id2594 . -1) (1687 . 1695) 1688 (1687 . 1688) (#("    " 0 4 (fontified t)) . -1687) 1691 (1694 . 1695) (1693 . 1694) (1692 . 1693) (1691 . 1692) (1686 . 1691) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (undo-tree-id2595 . -1) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1683 . 1685) (1682 . 1683) (1674 . 1680) (#("0" 0 1 (fontified t)) . -1674) (undo-tree-id2596 . -1) 1675 (#(" " 0 1 (fontified t)) . -1677) (undo-tree-id2597 . -1) 1678 (1677 . 1678) (1672 . 1676) (1668 . 1672) (1664 . 1668) (1663 . 1664) (1662 . 1663) (1653 . 1662) (1652 . 1654) (1650 . 1652) (1648 . 1650) (t 25220 24711 539576 837000)) nil (25220 24824 313333 49000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 1648) (undo-tree-id2394 . -2) (undo-tree-id2395 . -2) (undo-tree-id2396 . -2) (undo-tree-id2397 . -2) (undo-tree-id2398 . -2) (undo-tree-id2399 . -2) (undo-tree-id2400 . -2) (undo-tree-id2401 . -2) (undo-tree-id2402 . -2) (undo-tree-id2403 . -2) (undo-tree-id2404 . -2) (undo-tree-id2405 . -2) (undo-tree-id2406 . -2) (undo-tree-id2407 . -2) (undo-tree-id2408 . -2) (undo-tree-id2409 . -2) (undo-tree-id2410 . -2) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (undo-tree-id2413 . -2) (undo-tree-id2414 . -2) (#("if" 0 2 (fontified nil face font-lock-keyword-face)) . 1650) (undo-tree-id2415 . -2) (undo-tree-id2416 . -2) (undo-tree-id2417 . -2) (undo-tree-id2418 . -2) (undo-tree-id2419 . -2) (undo-tree-id2420 . -2) (undo-tree-id2421 . -2) (undo-tree-id2422 . -2) (undo-tree-id2423 . -2) (undo-tree-id2424 . -2) (undo-tree-id2425 . -2) (undo-tree-id2426 . -2) (undo-tree-id2427 . -2) (undo-tree-id2428 . -2) (undo-tree-id2429 . -2) (undo-tree-id2430 . -2) (undo-tree-id2431 . -2) (undo-tree-id2432 . -2) (undo-tree-id2433 . -2) (undo-tree-id2434 . -2) (undo-tree-id2435 . -2) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1652) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (undo-tree-id2443 . -2) (undo-tree-id2444 . -2) (undo-tree-id2445 . -2) (undo-tree-id2446 . -2) (undo-tree-id2447 . -2) (undo-tree-id2448 . -2) (undo-tree-id2449 . -2) (undo-tree-id2450 . -2) (undo-tree-id2451 . -2) (undo-tree-id2452 . -2) (undo-tree-id2453 . -2) (undo-tree-id2454 . -2) (undo-tree-id2455 . 1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -2) (#("arreglo[i" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-4-face)) 8 9 (fontified nil)) . 1653) (undo-tree-id2458 . -9) (undo-tree-id2459 . -9) (undo-tree-id2460 . -9) (undo-tree-id2461 . -9) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1662) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (#(" " 0 1 (fontified nil)) . 1663) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (#("> ar" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1664) (undo-tree-id2470 . -4) (undo-tree-id2471 . -4) (undo-tree-id2472 . -4) (undo-tree-id2473 . -4) (#("regl" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1668) (undo-tree-id2474 . -2) (undo-tree-id2475 . -4) (undo-tree-id2476 . -4) (undo-tree-id2477 . -4) (#("o[0]" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-4-face)) 2 3 (fontified nil) 3 4 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1672) (undo-tree-id2478 . -2) (undo-tree-id2479 . -1) (undo-tree-id2480 . 3) (undo-tree-id2481 . -2) (#(" " 0 1 (fontified nil)) . 1677) (undo-tree-id2482 . 1) (1677 . 1678) (1674 . 1675) (#("inicio" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1682) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-mismatched-face))) . 1683) (undo-tree-id2500 . 1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . 1) (undo-tree-id2518 . 1) (undo-tree-id2519 . -2) (#("
	" 0 1 (fontified nil) 1 2 (fontified nil)) . 1684) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (#(" " 0 1 (fontified nil)) . 1652) (#("
" 0 1 (fontified nil)) . 1687) (undo-tree-id2536 . 1) (undo-tree-id2537 . 1) (1686 . 1687) (#("	" 0 1 (fontified nil)) . 1687) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 1686) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (#("i" 0 1 (fontified nil)) . 1691) (undo-tree-id2554 . 1) (undo-tree-id2555 . 1) (#("-" 0 1 (fontified nil)) . 1692) (#("-" 0 1 (fontified nil)) . 1693) (#(";" 0 1 (fontified nil)) . 1694) (1687 . 1691) (#("	" 0 1 (fontified nil)) . 1687) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1687) (undo-tree-id2556 . -6) (undo-tree-id2557 . -6) (undo-tree-id2558 . -6) (undo-tree-id2559 . -6) (undo-tree-id2560 . -6) (undo-tree-id2561 . -6) (undo-tree-id2562 . -6) (undo-tree-id2563 . -6) (undo-tree-id2564 . -6) (undo-tree-id2565 . -6) (undo-tree-id2566 . -6) (undo-tree-id2567 . -6) (undo-tree-id2568 . -6) (undo-tree-id2569 . -6) (undo-tree-id2570 . -6) (undo-tree-id2571 . -6) (1675 . 1696) 1674) nil (25220 24824 313244 507000) 0 nil])
([nil nil ((#("inicio]) {
	        	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-4-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-3-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1675) (undo-tree-id2378 . -18) (undo-tree-id2379 . -18) (undo-tree-id2380 . -18) (undo-tree-id2381 . -18) (undo-tree-id2382 . -18) (undo-tree-id2383 . -18) (undo-tree-id2384 . -18) (undo-tree-id2385 . -18) (undo-tree-id2386 . -18) (undo-tree-id2387 . -18) (undo-tree-id2388 . -18) (undo-tree-id2389 . -18) (undo-tree-id2390 . -18) (undo-tree-id2391 . -18) (undo-tree-id2392 . -18) (undo-tree-id2393 . -18) (1687 . 1695) (1687 . 1688) (#("    " 0 4 (fontified nil)) . 1687) (1686 . 1695) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1682 . 1685) (1674 . 1680) (#("0" 0 1 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1653 . 1676) (1648 . 1654) (t 25220 24711 539576 837000)) nil (25220 24824 312912 242000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 1648) (undo-tree-id2187 . -2) (undo-tree-id2188 . -2) (undo-tree-id2189 . -2) (undo-tree-id2190 . -2) (undo-tree-id2191 . -2) (undo-tree-id2192 . -2) (undo-tree-id2193 . -2) (undo-tree-id2194 . -2) (undo-tree-id2195 . -2) (undo-tree-id2196 . -2) (undo-tree-id2197 . -2) (undo-tree-id2198 . -2) (undo-tree-id2199 . -2) (undo-tree-id2200 . -2) (undo-tree-id2201 . -2) (undo-tree-id2202 . -2) (undo-tree-id2203 . -2) (undo-tree-id2204 . -2) (undo-tree-id2205 . -2) (undo-tree-id2206 . -2) (undo-tree-id2207 . -2) (undo-tree-id2208 . -2) (#("if" 0 2 (fontified nil face font-lock-keyword-face)) . 1650) (undo-tree-id2209 . -2) (undo-tree-id2210 . -2) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -2) (undo-tree-id2214 . -2) (undo-tree-id2215 . -2) (undo-tree-id2216 . -2) (undo-tree-id2217 . -2) (undo-tree-id2218 . -2) (undo-tree-id2219 . -2) (undo-tree-id2220 . -2) (undo-tree-id2221 . -2) (undo-tree-id2222 . -2) (undo-tree-id2223 . -2) (undo-tree-id2224 . -2) (undo-tree-id2225 . -2) (undo-tree-id2226 . -2) (undo-tree-id2227 . -2) (undo-tree-id2228 . -2) (undo-tree-id2229 . -2) (undo-tree-id2230 . -2) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1652) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -2) (undo-tree-id2235 . -2) (undo-tree-id2236 . -2) (undo-tree-id2237 . -2) (undo-tree-id2238 . -2) (undo-tree-id2239 . -2) (undo-tree-id2240 . -2) (undo-tree-id2241 . -2) (undo-tree-id2242 . -2) (undo-tree-id2243 . -2) (undo-tree-id2244 . -2) (undo-tree-id2245 . -2) (undo-tree-id2246 . -2) (undo-tree-id2247 . -2) (undo-tree-id2248 . -2) (undo-tree-id2249 . -2) (undo-tree-id2250 . 1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -2) (undo-tree-id2253 . -1) (#("arreglo[i" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-4-face)) 8 9 (fontified nil)) . 1653) (undo-tree-id2254 . -9) (undo-tree-id2255 . -9) (undo-tree-id2256 . -9) (undo-tree-id2257 . -9) (undo-tree-id2258 . -9) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1662) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (#(" " 0 1 (fontified nil)) . 1663) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (#("> ar" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1664) (undo-tree-id2269 . -4) (undo-tree-id2270 . -4) (undo-tree-id2271 . -4) (undo-tree-id2272 . -4) (undo-tree-id2273 . -4) (#("regl" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1668) (undo-tree-id2274 . -2) (undo-tree-id2275 . -4) (undo-tree-id2276 . -4) (undo-tree-id2277 . -4) (undo-tree-id2278 . -4) (#("o[0]" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-4-face)) 2 3 (fontified nil) 3 4 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1672) (undo-tree-id2279 . -2) (undo-tree-id2280 . -1) (undo-tree-id2281 . 3) (undo-tree-id2282 . -2) (undo-tree-id2283 . -1) (#(" " 0 1 (fontified nil)) . 1677) (undo-tree-id2284 . 1) (1677 . 1678) (1674 . 1675) (#("inicio" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1682) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-mismatched-face))) . 1683) (undo-tree-id2302 . 1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . 1) (undo-tree-id2320 . 1) (undo-tree-id2321 . -2) (#("
	" 0 1 (fontified nil) 1 2 (fontified nil)) . 1684) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (#(" " 0 1 (fontified nil)) . 1652) (#("
" 0 1 (fontified nil)) . 1687) (undo-tree-id2338 . 1) (undo-tree-id2339 . 1) (1686 . 1687) (#("	" 0 1 (fontified nil)) . 1687) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 1686) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (#("i" 0 1 (fontified nil)) . 1691) (undo-tree-id2356 . 1) (undo-tree-id2357 . 1) (#("-" 0 1 (fontified nil)) . 1692) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (#("-" 0 1 (fontified nil)) . 1693) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (#(";" 0 1 (fontified nil)) . 1694) (1687 . 1691) (#("	" 0 1 (fontified nil)) . 1687) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1687) (undo-tree-id2362 . -6) (undo-tree-id2363 . -6) (undo-tree-id2364 . -6) (undo-tree-id2365 . -6) (undo-tree-id2366 . -6) (undo-tree-id2367 . -6) (undo-tree-id2368 . -6) (undo-tree-id2369 . -6) (undo-tree-id2370 . -6) (undo-tree-id2371 . -6) (undo-tree-id2372 . -6) (undo-tree-id2373 . -6) (undo-tree-id2374 . -6) (undo-tree-id2375 . -6) (undo-tree-id2376 . -6) (undo-tree-id2377 . -6) (1675 . 1696) 1674) nil (25220 24824 312848 282000) 0 nil])
([nil nil ((#("inicio]) {
	        	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-4-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-3-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1675) (undo-tree-id2171 . -18) (undo-tree-id2172 . -18) (undo-tree-id2173 . -18) (undo-tree-id2174 . -18) (undo-tree-id2175 . -18) (undo-tree-id2176 . -18) (undo-tree-id2177 . -18) (undo-tree-id2178 . -18) (undo-tree-id2179 . -18) (undo-tree-id2180 . -18) (undo-tree-id2181 . -18) (undo-tree-id2182 . -18) (undo-tree-id2183 . -18) (undo-tree-id2184 . -18) (undo-tree-id2185 . -18) (undo-tree-id2186 . -18) (1687 . 1695) (1687 . 1688) (#("    " 0 4 (fontified nil)) . 1687) (1686 . 1695) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1682 . 1685) (1674 . 1680) (#("0" 0 1 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1653 . 1676) (1648 . 1654) (t 25220 24711 539576 837000)) nil (25220 24824 312451 170000) 0 nil])
([nil nil ((#("
	if()" 0 1 (fontified t) 1 2 (fontified nil) 2 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face (rainbow-delimiters-depth-3-face)) 5 6 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1648) (undo-tree-id1974 . -5) (undo-tree-id1975 . -5) (undo-tree-id1976 . -5) (undo-tree-id1977 . -6) (undo-tree-id1978 . -6) (undo-tree-id1979 . -6) (undo-tree-id1980 . -6) (undo-tree-id1981 . -6) (undo-tree-id1982 . -6) (undo-tree-id1983 . -6) (undo-tree-id1984 . -6) (undo-tree-id1985 . -6) (undo-tree-id1986 . -6) (undo-tree-id1987 . -6) (undo-tree-id1988 . -6) (undo-tree-id1989 . -6) (undo-tree-id1990 . -6) (undo-tree-id1991 . -6) (undo-tree-id1992 . -6) (undo-tree-id1993 . 1) (undo-tree-id1994 . -5) (undo-tree-id1995 . -6) (undo-tree-id1996 . -1) (undo-tree-id1997 . -5) (undo-tree-id1998 . -5) (undo-tree-id1999 . -5) (undo-tree-id2000 . -5) (undo-tree-id2001 . -5) (undo-tree-id2002 . -5) (undo-tree-id2003 . -5) (undo-tree-id2004 . -5) (undo-tree-id2005 . -5) (undo-tree-id2006 . -5) (undo-tree-id2007 . -5) (undo-tree-id2008 . -5) (undo-tree-id2009 . -5) (undo-tree-id2010 . -5) (undo-tree-id2011 . -5) (undo-tree-id2012 . -5) (undo-tree-id2013 . -5) (undo-tree-id2014 . -5) (undo-tree-id2015 . -5) (undo-tree-id2016 . -5) (undo-tree-id2017 . -5) (undo-tree-id2018 . -5) (undo-tree-id2019 . -5) (undo-tree-id2020 . -5) (undo-tree-id2021 . -5) (undo-tree-id2022 . -5) (undo-tree-id2023 . -5) (undo-tree-id2024 . -5) (undo-tree-id2025 . -5) (undo-tree-id2026 . -5) (undo-tree-id2027 . -5) (undo-tree-id2028 . -5) (undo-tree-id2029 . -5) (undo-tree-id2030 . -5) (undo-tree-id2031 . -5) (undo-tree-id2032 . -5) (undo-tree-id2033 . -5) (undo-tree-id2034 . -5) (undo-tree-id2035 . -5) (undo-tree-id2036 . -5) (undo-tree-id2037 . -5) (undo-tree-id2038 . -5) (undo-tree-id2039 . -5) (undo-tree-id2040 . -5) (undo-tree-id2041 . -5) (undo-tree-id2042 . -5) (undo-tree-id2043 . -5) (undo-tree-id2044 . -5) (#("arreglo[i] > arreglo[0]" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-4-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-4-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil face (rainbow-delimiters-depth-4-face)) 21 22 (fontified nil) 22 23 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1653) (undo-tree-id2045 . -17) (undo-tree-id2046 . -21) (undo-tree-id2047 . -20) (undo-tree-id2048 . 3) (undo-tree-id2049 . -21) (undo-tree-id2050 . -20) (undo-tree-id2051 . -20) (undo-tree-id2052 . -20) (undo-tree-id2053 . -20) (undo-tree-id2054 . -20) (undo-tree-id2055 . -20) (undo-tree-id2056 . -20) (undo-tree-id2057 . -20) (undo-tree-id2058 . -20) (undo-tree-id2059 . -20) (undo-tree-id2060 . -20) (undo-tree-id2061 . -20) (undo-tree-id2062 . -20) (undo-tree-id2063 . -20) (undo-tree-id2064 . -20) (undo-tree-id2065 . -20) (undo-tree-id2066 . -20) (undo-tree-id2067 . -20) (undo-tree-id2068 . -20) (undo-tree-id2069 . -20) (undo-tree-id2070 . -20) (undo-tree-id2071 . -20) (undo-tree-id2072 . -20) (undo-tree-id2073 . -20) (undo-tree-id2074 . -20) (undo-tree-id2075 . -20) (undo-tree-id2076 . -20) (undo-tree-id2077 . -20) (undo-tree-id2078 . -20) (undo-tree-id2079 . -20) (undo-tree-id2080 . -20) (undo-tree-id2081 . -20) (undo-tree-id2082 . -20) (undo-tree-id2083 . -20) (undo-tree-id2084 . -20) (undo-tree-id2085 . -20) (undo-tree-id2086 . -20) (undo-tree-id2087 . -20) (undo-tree-id2088 . -20) (undo-tree-id2089 . -20) (undo-tree-id2090 . -20) (undo-tree-id2091 . -20) (undo-tree-id2092 . -20) (undo-tree-id2093 . -20) (undo-tree-id2094 . -20) (undo-tree-id2095 . -20) (undo-tree-id2096 . -20) (undo-tree-id2097 . -20) (#(" " 0 1 (fontified nil)) . 1677) (undo-tree-id2098 . 1) (1677 . 1678) (1674 . 1675) (#("inicio" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1674) (#(" {}" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face)) 2 3 (fontified nil face (rainbow-delimiters-mismatched-face))) . 1682) (undo-tree-id2099 . 1) (undo-tree-id2100 . -2) (undo-tree-id2101 . -2) (undo-tree-id2102 . -2) (undo-tree-id2103 . -2) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (undo-tree-id2108 . -2) (undo-tree-id2109 . -2) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . 1) (undo-tree-id2117 . 1) (undo-tree-id2118 . -3) (#("
	" 0 1 (fontified nil) 1 2 (fontified nil)) . 1684) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (#(" " 0 1 (fontified nil)) . 1652) (#("
" 0 1 (fontified nil)) . 1687) (undo-tree-id2135 . 1) (undo-tree-id2136 . 1) (1686 . 1687) (#("	" 0 1 (fontified t)) . 1687) (#("	    i--;" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1686) (undo-tree-id2137 . 4) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . 4) (1687 . 1691) (#("	" 0 1 (fontified nil)) . 1687) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1687) (undo-tree-id2155 . -6) (undo-tree-id2156 . -6) (undo-tree-id2157 . -6) (undo-tree-id2158 . -6) (undo-tree-id2159 . -6) (undo-tree-id2160 . -6) (undo-tree-id2161 . -6) (undo-tree-id2162 . -6) (undo-tree-id2163 . -6) (undo-tree-id2164 . -6) (undo-tree-id2165 . -6) (undo-tree-id2166 . -6) (undo-tree-id2167 . -6) (undo-tree-id2168 . -6) (undo-tree-id2169 . -6) (undo-tree-id2170 . -6) (1675 . 1696)) nil (25220 24824 312392 704000) 0 nil])
([nil nil ((#("inicio]) {
	        	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-4-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-3-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1675) (undo-tree-id1958 . -18) (undo-tree-id1959 . -18) (undo-tree-id1960 . -18) (undo-tree-id1961 . -18) (undo-tree-id1962 . -18) (undo-tree-id1963 . -18) (undo-tree-id1964 . -18) (undo-tree-id1965 . -18) (undo-tree-id1966 . -18) (undo-tree-id1967 . -18) (undo-tree-id1968 . -18) (undo-tree-id1969 . -18) (undo-tree-id1970 . -18) (undo-tree-id1971 . -18) (undo-tree-id1972 . -18) (undo-tree-id1973 . -18) (1687 . 1695) (1687 . 1688) (#("    " 0 4 (fontified nil)) . 1687) (1686 . 1695) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1682 . 1685) (1674 . 1680) (#("0" 0 1 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1653 . 1676) (1648 . 1654) (t 25220 24711 539576 837000)) nil (25220 24824 312032 772000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 1648) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -2) (undo-tree-id1511 . -2) (undo-tree-id1512 . -1) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) (undo-tree-id1538 . -2) (undo-tree-id1539 . -2) (undo-tree-id1540 . -2) (undo-tree-id1541 . -2) (undo-tree-id1542 . -2) (undo-tree-id1543 . -2) (undo-tree-id1544 . -2) (#("if" 0 2 (fontified nil face font-lock-keyword-face)) . 1650) (undo-tree-id1545 . -2) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (undo-tree-id1548 . -2) (undo-tree-id1549 . -2) (undo-tree-id1550 . -2) (undo-tree-id1551 . -2) (undo-tree-id1552 . -2) (undo-tree-id1553 . -2) (undo-tree-id1554 . -2) (undo-tree-id1555 . -2) (undo-tree-id1556 . -2) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) (undo-tree-id1568 . -2) (undo-tree-id1569 . -2) (undo-tree-id1570 . -2) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (undo-tree-id1573 . -2) (undo-tree-id1574 . -2) (undo-tree-id1575 . -2) (undo-tree-id1576 . -2) (undo-tree-id1577 . -2) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1652) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (undo-tree-id1608 . -2) (undo-tree-id1609 . -2) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (undo-tree-id1615 . -2) (undo-tree-id1616 . -2) (undo-tree-id1617 . 1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -2) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#("arreglo[i" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-4-face)) 8 9 (fontified nil)) . 1653) (undo-tree-id1652 . -9) (undo-tree-id1653 . -9) (undo-tree-id1654 . -9) (undo-tree-id1655 . -9) (undo-tree-id1656 . -9) (undo-tree-id1657 . -9) (undo-tree-id1658 . -9) (undo-tree-id1659 . -9) (undo-tree-id1660 . -9) (undo-tree-id1661 . -9) (undo-tree-id1662 . -9) (undo-tree-id1663 . -9) (undo-tree-id1664 . -9) (undo-tree-id1665 . -9) (undo-tree-id1666 . -9) (undo-tree-id1667 . -9) (undo-tree-id1668 . -9) (undo-tree-id1669 . -9) (undo-tree-id1670 . -9) (undo-tree-id1671 . -9) (undo-tree-id1672 . -9) (undo-tree-id1673 . -9) (undo-tree-id1674 . -9) (undo-tree-id1675 . -9) (undo-tree-id1676 . -9) (undo-tree-id1677 . -9) (undo-tree-id1678 . -9) (undo-tree-id1679 . -9) (undo-tree-id1680 . -9) (undo-tree-id1681 . -9) (undo-tree-id1682 . -9) (undo-tree-id1683 . -9) (undo-tree-id1684 . -9) (undo-tree-id1685 . -9) (undo-tree-id1686 . -9) (undo-tree-id1687 . -9) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1662) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (#(" " 0 1 (fontified nil)) . 1663) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (#("> ar" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1664) (undo-tree-id1760 . -4) (undo-tree-id1761 . -4) (undo-tree-id1762 . -4) (undo-tree-id1763 . -4) (undo-tree-id1764 . -4) (undo-tree-id1765 . -4) (undo-tree-id1766 . -4) (undo-tree-id1767 . -4) (undo-tree-id1768 . -4) (undo-tree-id1769 . -4) (undo-tree-id1770 . -4) (undo-tree-id1771 . -4) (undo-tree-id1772 . -4) (undo-tree-id1773 . -4) (undo-tree-id1774 . -4) (undo-tree-id1775 . -4) (undo-tree-id1776 . -4) (undo-tree-id1777 . -4) (undo-tree-id1778 . -4) (undo-tree-id1779 . -4) (undo-tree-id1780 . -4) (undo-tree-id1781 . -4) (undo-tree-id1782 . -4) (undo-tree-id1783 . -4) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -4) (#("regl" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1668) (undo-tree-id1796 . -2) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4) (undo-tree-id1831 . -4) (#("o[0]" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-4-face)) 2 3 (fontified nil) 3 4 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1672) (undo-tree-id1832 . -2) (undo-tree-id1833 . -1) (undo-tree-id1834 . 3) (undo-tree-id1835 . -2) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (#(" " 0 1 (fontified nil)) . 1677) (undo-tree-id1868 . 1) (1677 . 1678) (1674 . 1675) (#("inicio" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1682) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-mismatched-face))) . 1683) (undo-tree-id1886 . 1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . 1) (undo-tree-id1904 . 1) (undo-tree-id1905 . -2) (#("
	" 0 1 (fontified nil) 1 2 (fontified nil)) . 1684) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (#(" " 0 1 (fontified nil)) . 1652) (#("
" 0 1 (fontified nil)) . 1687) (undo-tree-id1922 . 1) (undo-tree-id1923 . 1) (1686 . 1687) (#("	" 0 1 (fontified nil)) . 1687) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 1686) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (#("i" 0 1 (fontified nil)) . 1691) (undo-tree-id1940 . 1) (undo-tree-id1941 . 1) (#("-" 0 1 (fontified nil)) . 1692) (#("-" 0 1 (fontified nil)) . 1693) (#(";" 0 1 (fontified nil)) . 1694) (1687 . 1691) (#("	" 0 1 (fontified nil)) . 1687) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1687) (undo-tree-id1942 . -6) (undo-tree-id1943 . -6) (undo-tree-id1944 . -6) (undo-tree-id1945 . -6) (undo-tree-id1946 . -6) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) (undo-tree-id1956 . -6) (undo-tree-id1957 . -6) (1675 . 1696) 1674) nil (25220 24824 311944 667000) 0 nil])
([nil nil ((#("inicio]) {
	        	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-4-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-3-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1675) (undo-tree-id1475 . -18) (undo-tree-id1476 . -18) (undo-tree-id1477 . -18) (undo-tree-id1478 . -18) (undo-tree-id1479 . -18) (undo-tree-id1480 . -18) (undo-tree-id1481 . -18) (undo-tree-id1482 . -18) (undo-tree-id1483 . -18) (undo-tree-id1484 . -18) (undo-tree-id1485 . -18) (undo-tree-id1486 . -18) (undo-tree-id1487 . -18) (undo-tree-id1488 . -18) (undo-tree-id1489 . -18) (undo-tree-id1490 . -18) (1687 . 1695) (1687 . 1688) (#("    " 0 4 (fontified nil)) . 1687) (1686 . 1695) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1682 . 1685) (1674 . 1680) (#("0" 0 1 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1653 . 1676) (1648 . 1654) (t 25220 24711 539576 837000)) nil (25220 24824 311082 161000) 0 nil])
([nil nil ((#("
	if()" 0 1 (fontified t) 1 2 (fontified nil) 2 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face (rainbow-delimiters-depth-3-face)) 5 6 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1648) (undo-tree-id1164 . -5) (undo-tree-id1165 . -5) (undo-tree-id1166 . -5) (undo-tree-id1167 . -6) (undo-tree-id1168 . -6) (undo-tree-id1169 . -6) (undo-tree-id1170 . -6) (undo-tree-id1171 . -6) (undo-tree-id1172 . -6) (undo-tree-id1173 . -6) (undo-tree-id1174 . -6) (undo-tree-id1175 . -6) (undo-tree-id1176 . -6) (undo-tree-id1177 . -6) (undo-tree-id1178 . -6) (undo-tree-id1179 . -6) (undo-tree-id1180 . -6) (undo-tree-id1181 . -6) (undo-tree-id1182 . -6) (undo-tree-id1183 . 1) (undo-tree-id1184 . -5) (undo-tree-id1185 . -6) (undo-tree-id1186 . -5) (undo-tree-id1187 . -5) (undo-tree-id1188 . -5) (undo-tree-id1189 . -5) (undo-tree-id1190 . -5) (undo-tree-id1191 . -5) (undo-tree-id1192 . -5) (undo-tree-id1193 . -5) (undo-tree-id1194 . -5) (undo-tree-id1195 . -5) (undo-tree-id1196 . -5) (undo-tree-id1197 . -5) (undo-tree-id1198 . -5) (undo-tree-id1199 . -5) (undo-tree-id1200 . -5) (undo-tree-id1201 . -5) (undo-tree-id1202 . -5) (undo-tree-id1203 . -5) (undo-tree-id1204 . -5) (undo-tree-id1205 . -5) (undo-tree-id1206 . -5) (undo-tree-id1207 . -5) (undo-tree-id1208 . -5) (undo-tree-id1209 . -5) (undo-tree-id1210 . -5) (undo-tree-id1211 . -5) (undo-tree-id1212 . -5) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (undo-tree-id1215 . -5) (undo-tree-id1216 . -5) (undo-tree-id1217 . -1) (undo-tree-id1218 . -5) (undo-tree-id1219 . -5) (undo-tree-id1220 . -5) (undo-tree-id1221 . -5) (undo-tree-id1222 . -5) (undo-tree-id1223 . -5) (undo-tree-id1224 . -5) (undo-tree-id1225 . -5) (undo-tree-id1226 . -5) (undo-tree-id1227 . -5) (undo-tree-id1228 . -5) (undo-tree-id1229 . -5) (undo-tree-id1230 . -5) (undo-tree-id1231 . -5) (undo-tree-id1232 . -5) (undo-tree-id1233 . -5) (undo-tree-id1234 . -5) (undo-tree-id1235 . -5) (undo-tree-id1236 . -5) (undo-tree-id1237 . -5) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) (undo-tree-id1243 . -5) (undo-tree-id1244 . -5) (undo-tree-id1245 . -5) (undo-tree-id1246 . -5) (undo-tree-id1247 . -5) (undo-tree-id1248 . -5) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5) (undo-tree-id1253 . -5) (undo-tree-id1254 . -5) (undo-tree-id1255 . -5) (undo-tree-id1256 . -5) (undo-tree-id1257 . -5) (undo-tree-id1258 . -5) (undo-tree-id1259 . -5) (undo-tree-id1260 . -5) (undo-tree-id1261 . -5) (undo-tree-id1262 . -5) (undo-tree-id1263 . -5) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5) (undo-tree-id1272 . -5) (undo-tree-id1273 . -5) (undo-tree-id1274 . -5) (undo-tree-id1275 . -5) (undo-tree-id1276 . -5) (undo-tree-id1277 . -5) (undo-tree-id1278 . -5) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5) (undo-tree-id1287 . -5) (undo-tree-id1288 . -5) (undo-tree-id1289 . -5) (#("arreglo[i] > arreglo[0]" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-4-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-4-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil face (rainbow-delimiters-depth-4-face)) 21 22 (fontified nil) 22 23 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1653) (undo-tree-id1290 . -17) (undo-tree-id1291 . -21) (undo-tree-id1292 . -20) (undo-tree-id1293 . 3) (undo-tree-id1294 . -21) (undo-tree-id1295 . -20) (undo-tree-id1296 . -20) (undo-tree-id1297 . -20) (undo-tree-id1298 . -20) (undo-tree-id1299 . -20) (undo-tree-id1300 . -20) (undo-tree-id1301 . -20) (undo-tree-id1302 . -20) (undo-tree-id1303 . -20) (undo-tree-id1304 . -20) (undo-tree-id1305 . -20) (undo-tree-id1306 . -20) (undo-tree-id1307 . -20) (undo-tree-id1308 . -20) (undo-tree-id1309 . -20) (undo-tree-id1310 . -20) (undo-tree-id1311 . -20) (undo-tree-id1312 . -20) (undo-tree-id1313 . -20) (undo-tree-id1314 . -20) (undo-tree-id1315 . -20) (undo-tree-id1316 . -20) (undo-tree-id1317 . -20) (undo-tree-id1318 . -20) (undo-tree-id1319 . -20) (undo-tree-id1320 . -20) (undo-tree-id1321 . -20) (undo-tree-id1322 . -20) (undo-tree-id1323 . -20) (undo-tree-id1324 . -20) (undo-tree-id1325 . -20) (undo-tree-id1326 . -20) (undo-tree-id1327 . -20) (undo-tree-id1328 . -20) (undo-tree-id1329 . -20) (undo-tree-id1330 . -20) (undo-tree-id1331 . -20) (undo-tree-id1332 . -20) (undo-tree-id1333 . -20) (undo-tree-id1334 . -20) (undo-tree-id1335 . -20) (undo-tree-id1336 . -20) (undo-tree-id1337 . -20) (undo-tree-id1338 . -20) (undo-tree-id1339 . -20) (undo-tree-id1340 . -20) (undo-tree-id1341 . -20) (undo-tree-id1342 . -20) (undo-tree-id1343 . -20) (undo-tree-id1344 . -20) (undo-tree-id1345 . -20) (undo-tree-id1346 . -20) (undo-tree-id1347 . -20) (undo-tree-id1348 . -20) (undo-tree-id1349 . -20) (undo-tree-id1350 . -20) (undo-tree-id1351 . -20) (undo-tree-id1352 . -20) (undo-tree-id1353 . -20) (undo-tree-id1354 . -20) (undo-tree-id1355 . -20) (undo-tree-id1356 . -20) (undo-tree-id1357 . -20) (undo-tree-id1358 . -20) (undo-tree-id1359 . -20) (undo-tree-id1360 . -20) (undo-tree-id1361 . -20) (undo-tree-id1362 . -20) (undo-tree-id1363 . -20) (undo-tree-id1364 . -20) (undo-tree-id1365 . -20) (undo-tree-id1366 . -20) (undo-tree-id1367 . -20) (undo-tree-id1368 . -20) (undo-tree-id1369 . -20) (undo-tree-id1370 . -20) (undo-tree-id1371 . -20) (undo-tree-id1372 . -20) (undo-tree-id1373 . -20) (undo-tree-id1374 . -20) (undo-tree-id1375 . -20) (undo-tree-id1376 . -20) (undo-tree-id1377 . -20) (undo-tree-id1378 . -20) (undo-tree-id1379 . -20) (undo-tree-id1380 . -20) (undo-tree-id1381 . -20) (undo-tree-id1382 . -20) (undo-tree-id1383 . -20) (undo-tree-id1384 . -20) (undo-tree-id1385 . -20) (undo-tree-id1386 . -20) (undo-tree-id1387 . -20) (undo-tree-id1388 . -20) (undo-tree-id1389 . -20) (undo-tree-id1390 . -20) (undo-tree-id1391 . -20) (undo-tree-id1392 . -20) (undo-tree-id1393 . -20) (undo-tree-id1394 . -20) (undo-tree-id1395 . -20) (undo-tree-id1396 . -20) (undo-tree-id1397 . -20) (#(" " 0 1 (fontified nil)) . 1677) (undo-tree-id1398 . 1) (1677 . 1678) (1674 . 1675) (#("inicio" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1674) (#(" {}" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face)) 2 3 (fontified nil face (rainbow-delimiters-mismatched-face))) . 1682) (undo-tree-id1399 . 1) (undo-tree-id1400 . -2) (undo-tree-id1401 . -2) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -2) (undo-tree-id1415 . -2) (undo-tree-id1416 . 1) (undo-tree-id1417 . 1) (undo-tree-id1418 . -3) (#("
	" 0 1 (fontified nil) 1 2 (fontified nil)) . 1684) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (#(" " 0 1 (fontified nil)) . 1652) (#("
" 0 1 (fontified nil)) . 1687) (undo-tree-id1435 . 1) (undo-tree-id1436 . 1) (1686 . 1687) (#("	" 0 1 (fontified t)) . 1687) (#("	    i--;" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1686) (undo-tree-id1437 . 4) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . 4) (undo-tree-id1455 . -6) (undo-tree-id1456 . -8) (undo-tree-id1457 . -6) (undo-tree-id1458 . -8) (1687 . 1691) (#("	" 0 1 (fontified nil)) . 1687) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1687) (undo-tree-id1459 . -6) (undo-tree-id1460 . -6) (undo-tree-id1461 . -6) (undo-tree-id1462 . -6) (undo-tree-id1463 . -6) (undo-tree-id1464 . -6) (undo-tree-id1465 . -6) (undo-tree-id1466 . -6) (undo-tree-id1467 . -6) (undo-tree-id1468 . -6) (undo-tree-id1469 . -6) (undo-tree-id1470 . -6) (undo-tree-id1471 . -6) (undo-tree-id1472 . -6) (undo-tree-id1473 . -6) (undo-tree-id1474 . -6) (1675 . 1696)) nil (25220 24824 311013 488000) 0 nil])
([nil nil ((#("inicio]) {
	        	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-4-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-3-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1675) (undo-tree-id1148 . -18) (undo-tree-id1149 . -18) (undo-tree-id1150 . -18) (undo-tree-id1151 . -18) (undo-tree-id1152 . -18) (undo-tree-id1153 . -18) (undo-tree-id1154 . -18) (undo-tree-id1155 . -18) (undo-tree-id1156 . -18) (undo-tree-id1157 . -18) (undo-tree-id1158 . -18) (undo-tree-id1159 . -18) (undo-tree-id1160 . -18) (undo-tree-id1161 . -18) (undo-tree-id1162 . -18) (undo-tree-id1163 . -18) (1687 . 1695) (1687 . 1688) (#("    " 0 4 (fontified nil)) . 1687) (1686 . 1695) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1682 . 1685) (1674 . 1680) (#("0" 0 1 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1653 . 1676) (1648 . 1654) (t 25220 24711 539576 837000)) nil (25220 24824 310398 232000) 0 nil])
([nil nil ((#("
	if()" 0 1 (fontified t) 1 2 (fontified nil) 2 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face (rainbow-delimiters-depth-3-face)) 5 6 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1648) (undo-tree-id813 . -5) (undo-tree-id814 . -5) (undo-tree-id815 . -5) (undo-tree-id816 . -6) (undo-tree-id817 . -6) (undo-tree-id818 . -6) (undo-tree-id819 . -6) (undo-tree-id820 . -6) (undo-tree-id821 . -6) (undo-tree-id822 . -6) (undo-tree-id823 . -6) (undo-tree-id824 . -6) (undo-tree-id825 . -6) (undo-tree-id826 . -6) (undo-tree-id827 . -6) (undo-tree-id828 . -6) (undo-tree-id829 . -6) (undo-tree-id830 . -6) (undo-tree-id831 . -6) (undo-tree-id832 . -5) (undo-tree-id833 . -5) (undo-tree-id834 . -5) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -5) (undo-tree-id839 . -5) (undo-tree-id840 . -5) (undo-tree-id841 . -5) (undo-tree-id842 . -5) (undo-tree-id843 . -5) (undo-tree-id844 . -5) (undo-tree-id845 . -5) (undo-tree-id846 . -5) (undo-tree-id847 . -5) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -5) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (undo-tree-id870 . -5) (undo-tree-id871 . -5) (undo-tree-id872 . -5) (undo-tree-id873 . -5) (undo-tree-id874 . -5) (undo-tree-id875 . -5) (undo-tree-id876 . -5) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -1) (undo-tree-id880 . -5) (undo-tree-id881 . -5) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) (undo-tree-id899 . -5) (undo-tree-id900 . -5) (undo-tree-id901 . -5) (undo-tree-id902 . -5) (undo-tree-id903 . -5) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) (undo-tree-id907 . -5) (undo-tree-id908 . -5) (undo-tree-id909 . -5) (undo-tree-id910 . -5) (undo-tree-id911 . -5) (undo-tree-id912 . -5) (undo-tree-id913 . -5) (undo-tree-id914 . -5) (undo-tree-id915 . -5) (undo-tree-id916 . -5) (undo-tree-id917 . -5) (undo-tree-id918 . -5) (undo-tree-id919 . -5) (undo-tree-id920 . -5) (undo-tree-id921 . -5) (undo-tree-id922 . -5) (undo-tree-id923 . -5) (undo-tree-id924 . -5) (undo-tree-id925 . -5) (undo-tree-id926 . -5) (undo-tree-id927 . -5) (undo-tree-id928 . -5) (undo-tree-id929 . -5) (undo-tree-id930 . -5) (undo-tree-id931 . -5) (undo-tree-id932 . -5) (undo-tree-id933 . -5) (undo-tree-id934 . -5) (undo-tree-id935 . -5) (undo-tree-id936 . -5) (undo-tree-id937 . -5) (undo-tree-id938 . -5) (undo-tree-id939 . -5) (undo-tree-id940 . -5) (undo-tree-id941 . -5) (undo-tree-id942 . -5) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -5) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -5) (undo-tree-id951 . -5) (#("arreglo[i] > arreglo[0]" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-4-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-4-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil face (rainbow-delimiters-depth-4-face)) 21 22 (fontified nil) 22 23 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1653) (undo-tree-id952 . -17) (undo-tree-id953 . -21) (undo-tree-id954 . -21) (undo-tree-id955 . -20) (undo-tree-id956 . -20) (undo-tree-id957 . -20) (undo-tree-id958 . -20) (undo-tree-id959 . -20) (undo-tree-id960 . -20) (undo-tree-id961 . -20) (undo-tree-id962 . -20) (undo-tree-id963 . -20) (undo-tree-id964 . -20) (undo-tree-id965 . -20) (undo-tree-id966 . -20) (undo-tree-id967 . -20) (undo-tree-id968 . -20) (undo-tree-id969 . -20) (undo-tree-id970 . -20) (undo-tree-id971 . -20) (undo-tree-id972 . -20) (undo-tree-id973 . -20) (undo-tree-id974 . -20) (undo-tree-id975 . -20) (undo-tree-id976 . -20) (undo-tree-id977 . -20) (undo-tree-id978 . -20) (undo-tree-id979 . -20) (undo-tree-id980 . -20) (undo-tree-id981 . -20) (undo-tree-id982 . -20) (undo-tree-id983 . -20) (undo-tree-id984 . -20) (undo-tree-id985 . -20) (undo-tree-id986 . -20) (undo-tree-id987 . -20) (undo-tree-id988 . -20) (undo-tree-id989 . -20) (undo-tree-id990 . -20) (undo-tree-id991 . -20) (undo-tree-id992 . -20) (undo-tree-id993 . -20) (undo-tree-id994 . -20) (undo-tree-id995 . -20) (undo-tree-id996 . -20) (undo-tree-id997 . -20) (undo-tree-id998 . -20) (undo-tree-id999 . -20) (undo-tree-id1000 . -20) (undo-tree-id1001 . -20) (undo-tree-id1002 . -21) (undo-tree-id1003 . -21) (undo-tree-id1004 . -21) (undo-tree-id1005 . -21) (undo-tree-id1006 . -21) (undo-tree-id1007 . -21) (undo-tree-id1008 . -21) (undo-tree-id1009 . -21) (undo-tree-id1010 . -21) (undo-tree-id1011 . -21) (undo-tree-id1012 . -21) (undo-tree-id1013 . -21) (undo-tree-id1014 . -21) (undo-tree-id1015 . -21) (undo-tree-id1016 . -21) (undo-tree-id1017 . -21) (undo-tree-id1018 . -21) (undo-tree-id1019 . -21) (undo-tree-id1020 . -21) (undo-tree-id1021 . -21) (undo-tree-id1022 . -21) (undo-tree-id1023 . -21) (undo-tree-id1024 . -21) (undo-tree-id1025 . -21) (undo-tree-id1026 . -21) (undo-tree-id1027 . -21) (undo-tree-id1028 . -21) (undo-tree-id1029 . -21) (undo-tree-id1030 . -21) (undo-tree-id1031 . -21) (undo-tree-id1032 . -21) (undo-tree-id1033 . -21) (undo-tree-id1034 . -21) (undo-tree-id1035 . -21) (undo-tree-id1036 . -21) (undo-tree-id1037 . -21) (undo-tree-id1038 . -21) (undo-tree-id1039 . -21) (undo-tree-id1040 . -21) (undo-tree-id1041 . -21) (undo-tree-id1042 . -21) (undo-tree-id1043 . -21) (undo-tree-id1044 . -21) (undo-tree-id1045 . -21) (undo-tree-id1046 . -21) (undo-tree-id1047 . -21) (undo-tree-id1048 . -21) (undo-tree-id1049 . -21) (undo-tree-id1050 . -21) (undo-tree-id1051 . -21) (undo-tree-id1052 . -21) (undo-tree-id1053 . -21) (undo-tree-id1054 . -21) (undo-tree-id1055 . -21) (undo-tree-id1056 . -21) (undo-tree-id1057 . -21) (undo-tree-id1058 . -21) (undo-tree-id1059 . -21) (undo-tree-id1060 . -21) (undo-tree-id1061 . -21) (undo-tree-id1062 . -21) (undo-tree-id1063 . -21) (undo-tree-id1064 . -21) (undo-tree-id1065 . -21) (undo-tree-id1066 . -21) (undo-tree-id1067 . -21) (undo-tree-id1068 . -21) (undo-tree-id1069 . -21) (undo-tree-id1070 . -21) (undo-tree-id1071 . -21) (undo-tree-id1072 . -21) (undo-tree-id1073 . -21) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1674 . 1675) (#("inicio" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1674) (#(" {}" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face)) 2 3 (fontified nil face (rainbow-delimiters-mismatched-face))) . 1682) (undo-tree-id1074 . 1) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . 1) (#("
	" 0 1 (fontified nil) 1 2 (fontified nil)) . 1684) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#(" " 0 1 (fontified nil)) . 1652) (#("
" 0 1 (fontified nil)) . 1687) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (1686 . 1687) (#("	" 0 1 (fontified t)) . 1687) (#("	    i--;" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1686) (undo-tree-id1110 . 4) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . 4) (undo-tree-id1128 . -6) (undo-tree-id1129 . -8) (undo-tree-id1130 . -6) (undo-tree-id1131 . -8) (1687 . 1691) (#("	" 0 1 (fontified nil)) . 1687) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1687) (undo-tree-id1132 . -6) (undo-tree-id1133 . -6) (undo-tree-id1134 . -6) (undo-tree-id1135 . -6) (undo-tree-id1136 . -6) (undo-tree-id1137 . -6) (undo-tree-id1138 . -6) (undo-tree-id1139 . -6) (undo-tree-id1140 . -6) (undo-tree-id1141 . -6) (undo-tree-id1142 . -6) (undo-tree-id1143 . -6) (undo-tree-id1144 . -6) (undo-tree-id1145 . -6) (undo-tree-id1146 . -6) (undo-tree-id1147 . -6) (1675 . 1696)) nil (25220 24824 310324 316000) 0 nil])
([nil nil ((#("inicio]) {
	        	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil face (rainbow-delimiters-depth-4-face)) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (fontified nil) 9 10 (fontified nil face (rainbow-delimiters-depth-3-face)) 10 11 (fontified nil) 11 12 (fontified nil) 12 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1675) (undo-tree-id797 . -18) (undo-tree-id798 . -18) (undo-tree-id799 . -18) (undo-tree-id800 . -18) (undo-tree-id801 . -18) (undo-tree-id802 . -18) (undo-tree-id803 . -18) (undo-tree-id804 . -18) (undo-tree-id805 . -18) (undo-tree-id806 . -18) (undo-tree-id807 . -18) (undo-tree-id808 . -18) (undo-tree-id809 . -18) (undo-tree-id810 . -18) (undo-tree-id811 . -18) (undo-tree-id812 . -18) (1687 . 1695) (1687 . 1688) (#("    " 0 4 (fontified nil)) . 1687) (1686 . 1695) (1687 . 1688) (#("	" 0 1 (fontified nil)) . 1686) (1687 . 1688) (1652 . 1653) (1684 . 1686) (1682 . 1685) (1674 . 1680) (#("0" 0 1 (fontified nil)) . 1674) (#(" " 0 1 (fontified nil)) . 1677) (1677 . 1678) (1653 . 1676) (1648 . 1654) (t 25220 24711 539576 837000)) nil (25220 24824 309293 176000) 0 nil])
([nil nil ((1675 . 1678)) nil (25220 24824 309250 444000) 0 nil])
([nil nil ((1678 . 1679)) nil (25220 24824 309247 850000) 0 nil])
([nil nil ((1679 . 1680)) nil (25220 24824 309245 584000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1679) (undo-tree-id795 . -1) (undo-tree-id796 . -1) 1680) nil (25220 24824 309242 389000) 0 nil])
([nil nil ((1679 . 1682)) nil (25220 24824 309235 337000) 0 nil])
([nil nil ((1682 . 1683)) nil (25220 24824 309232 927000) 0 nil])
([nil nil ((1683 . 1684)) nil (25220 24824 309230 703000) 0 nil])
([nil nil ((1684 . 1685)) nil (25220 24824 309228 238000) 0 nil])
([nil nil ((1683 . 1684)) nil (25220 24824 309225 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1685) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) 1686) nil (25220 24824 309219 394000) 0 nil])
([nil nil ((1685 . 1691)) nil (25220 25557 950345 218000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1684) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1697)) ((1697 . 1698) (1684 . 1685)) (25220 25558 606005 192000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 1695) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1)) ((1695 . 1697)) (25220 25558 780826 376000) 0 nil])
([nil nil ((#("=" 0 1 (fontified nil)) . 1798) (#("=" 0 1 (fontified nil)) . 1741) (1741 . 1742) (1798 . 1799)) ((#("=" 0 1 (fontified nil)) . 1798) (#("=" 0 1 (fontified nil)) . 1741) (1741 . 1742) (1798 . 1799)) (25220 25558 968758 53000) 0 nil])
([nil nil ((#("=" 0 1 (fontified nil)) . 1798) (#("=" 0 1 (fontified nil)) . 1741) (1741 . 1742) (1798 . 1799)) ((#("=" 0 1 (fontified nil)) . 1798) (#("=" 0 1 (fontified nil)) . 1741) (1741 . 1742) (1798 . 1799)) (25220 25562 309502 688000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1638) (undo-tree-id4621 . -1) 1639 (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1644) (undo-tree-id4622 . -1) (undo-tree-id4623 . 1) (undo-tree-id4624 . -1) 1645 (t 25220 25565 978908 696000)) nil (25220 25616 890362 212000) 0 nil] [nil nil ((1483 . 1492)) ((#(" && i < j" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t face font-lock-type-face)) . 1483)) (25220 25561 737396 972000) 0 nil])
([nil nil ((#("	    if(arreglo[i] > pivote && arreglo[j] <= pivote) {
" 0 3 (fontified t) 3 5 (fontified t) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-5-face)) 16 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-5-face)) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-5-face)) 39 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-5-face)) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-4-face)) 52 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-4-face)) 54 55 (fontified t)) . 1554) (undo-tree-id4617 . 1) (undo-tree-id4618 . -53) (undo-tree-id4619 . 2) (undo-tree-id4620 . -54) 1607) nil (25220 25616 890347 288000) 0 nil])
([nil nil ((1554 . 1560)) ((#(" && i " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1554)) (25220 25561 375095 892000) 0 nil])
([nil nil ((1554 . 1559) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 1554) (undo-tree-id4616 . 2) 1587) nil (25220 25616 890328 500000) 0 nil])
([nil nil ((1560 . 1563)) ((#("< j" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face font-lock-type-face)) . 1560) (undo-tree-id4494 . -3) (undo-tree-id4495 . -3) (undo-tree-id4496 . -3) (undo-tree-id4497 . -3) (undo-tree-id4498 . -3) (undo-tree-id4499 . -3) (undo-tree-id4500 . -3) (undo-tree-id4501 . -3) (undo-tree-id4502 . -3) (undo-tree-id4503 . -3) (undo-tree-id4504 . -3) (undo-tree-id4505 . -3) (undo-tree-id4506 . -3) (undo-tree-id4507 . -3) (undo-tree-id4508 . -3) (undo-tree-id4509 . -3)) (25220 25540 935412 92000) 0 nil])
([nil nil ((1596 . 1597) (#("	" 0 1 (fontified nil)) . 1595) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (1596 . 1597) (t 25220 25616 917467 702000)) nil (25220 25619 754348 200000) 0 nil])
([nil nil ((1562 . 1563) (#("j" 0 1 (fontified nil)) . 1562) (1562 . 1563) (#("j : int" 0 7 (fontified nil)) . -1562) (1562 . 1569) (#("j" 0 1 (fontified t face font-lock-type-face)) . -1562) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2606 . -1) (undo-tree-id2608 . -1) (undo-tree-id2610 . -1) (undo-tree-id2612 . -1) (undo-tree-id2614 . -1) (undo-tree-id2616 . -1) (undo-tree-id2618 . -1) (undo-tree-id2620 . -1) (undo-tree-id2622 . -1) (undo-tree-id2624 . -1) (undo-tree-id2626 . -1) (undo-tree-id2628 . -1) (undo-tree-id2630 . -1) (undo-tree-id2632 . -1) (undo-tree-id2634 . -1) (undo-tree-id2636 . -1) (undo-tree-id2638 . -1) (undo-tree-id2640 . -1) (undo-tree-id2642 . -1) (undo-tree-id2644 . -1) (undo-tree-id2646 . -1) (undo-tree-id2648 . -1) (undo-tree-id2650 . -1) 1563) ((1562 . 1563) (#("j : int" 0 7 (fontified nil)) . 1562) (1562 . 1569) (#("j" 0 1 (fontified nil)) . 1562) (1562 . 1563) (#("j" 0 1 (fontified t face font-lock-type-face)) . 1562)) (25220 25540 429316 179000) 0 nil])
([nil nil ((1677 . 1678) (#("	" 0 1 (fontified nil)) . 1676) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (1677 . 1678) (t 25220 25619 785499 176000)) nil (25220 25621 601543 41000) 0 nil])
([nil nil ((#("fin){

	      " 0 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face (rainbow-delimiters-depth-2-face)) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 14 (fontified t)) . -1320) (undo-tree-id2929 . -14) (undo-tree-id2931 . -14) (undo-tree-id2933 . -14) (undo-tree-id2935 . -14) (undo-tree-id2937 . -14) (undo-tree-id2939 . -14) (undo-tree-id2941 . -14) (undo-tree-id2943 . -14) (undo-tree-id2945 . -14) (undo-tree-id2947 . -14) (undo-tree-id2949 . -14) (undo-tree-id2951 . -14) (undo-tree-id2953 . -14) (undo-tree-id2955 . -14) (undo-tree-id2957 . -14) (undo-tree-id2959 . -14) (undo-tree-id2961 . -14) (undo-tree-id2963 . -14) (undo-tree-id2965 . -14) (undo-tree-id2967 . -14) (undo-tree-id2969 . -14) (undo-tree-id2971 . -14) (undo-tree-id2973 . -14) 1334 (#(" " 0 1 (fontified t)) . -1334) (undo-tree-id2974 . -1) (undo-tree-id2976 . -1) (undo-tree-id2978 . -1) (undo-tree-id2980 . -1) (undo-tree-id2982 . -1) (undo-tree-id2984 . -1) (undo-tree-id2986 . -1) (undo-tree-id2988 . -1) (undo-tree-id2990 . -1) (#(" " 0 1 (fontified nil)) . -1335) (undo-tree-id2992 . -1) (undo-tree-id2994 . -1) (undo-tree-id2996 . -1) (undo-tree-id2998 . -1) (undo-tree-id3000 . -1) (#("	" 0 1 (fontified nil)) . 1336) (undo-tree-id3002 . -1) (undo-tree-id3004 . -1) (undo-tree-id3006 . -1) (undo-tree-id3008 . -1) (undo-tree-id3010 . -1) (undo-tree-id3012 . -1) (1328 . 1336) 1329 (1328 . 1329) (1330 . 1331) (1345 . 1346) (1348 . 1349) (1347 . 1348) (#("	    " 0 5 (fontified nil)) . 1347) (undo-tree-id3013 . -5) (1352 . 1353) (1346 . 1352) (1345 . 1346) (1338 . 1344) (1331 . 1338) (1330 . 1332) (1328 . 1330) (#("o" 0 1 (fontified t)) . -1328) (undo-tree-id3014 . -1) (#("f" 0 1 (fontified t)) . -1329) (undo-tree-id3015 . -1) 1330 (1328 . 1330) (1327 . 1328) (1328 . 1329) (#("	" 0 1 (fontified nil)) . 1327) (undo-tree-id3016 . -1) (1327 . 1329) (#("        " 0 8 (c-in-sws t c-is-sws t fontified nil)) . 1326) (undo-tree-id3017 . -8) (1334 . 1335) (t 25220 25131 721149 612000)) ((#("
" 0 1 (fontified nil)) . 1334) (1326 . 1334) (#("	
" 0 1 (fontified nil) 1 2 (fontified nil)) . 1327) (1327 . 1328) (#("	" 0 1 (fontified nil)) . 1328) (#("	" 0 1 (fontified nil)) . 1327) (#("of" 0 1 (fontified nil) 1 2 (fontified nil)) . 1328) (1328 . 1330) (#("if" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 1328) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1330) (#("inicio " 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 1331) (#(">= fin" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1338) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1345) (#("
	    " 0 1 (fontified nil) 1 6 (fontified nil)) . 1346) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1352) (1347 . 1352) (#("	" 0 1 (fontified nil)) . 1347) (#("	" 0 1 (fontified t)) . 1348) (#(" " 0 1 (fontified nil)) . 1345) (#(" " 0 1 (fontified nil)) . 1330) (#("	" 0 1 (fontified nil)) . 1328) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1328) (1320 . 1337)) (25220 25539 916417 501000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1595) (t 25220 25621 632519 446000)) nil (25220 25641 830669 62000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 1334) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2770 . -1) (undo-tree-id2772 . -1) (undo-tree-id2774 . -1) (undo-tree-id2776 . -1) (undo-tree-id2778 . -1) (undo-tree-id2780 . -1) (undo-tree-id2782 . -1) (undo-tree-id2784 . -1) (undo-tree-id2786 . -1) (undo-tree-id2788 . -1) (undo-tree-id2790 . -1) (undo-tree-id2792 . -1) (undo-tree-id2794 . -1) (undo-tree-id2796 . -1) (undo-tree-id2798 . -1) (undo-tree-id2800 . -1) (undo-tree-id2802 . -1) (undo-tree-id2804 . -1) (undo-tree-id2806 . -1) (undo-tree-id2808 . -1) (undo-tree-id2810 . -1) (1326 . 1334) (#("	
" 0 1 (fontified nil) 1 2 (fontified nil)) . 1327) (undo-tree-id2812 . 1) (1327 . 1328) (#("	" 0 1 (c-in-sws t c-is-sws t fontified nil)) . 1328) (#("	" 0 1 (fontified nil)) . 1327) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2817 . -1) (undo-tree-id2819 . -1) (undo-tree-id2821 . -1) (undo-tree-id2823 . -1) (undo-tree-id2825 . -1) (undo-tree-id2827 . -1) (undo-tree-id2829 . -1) (undo-tree-id2831 . -1) (undo-tree-id2833 . -1) (undo-tree-id2835 . -1) (undo-tree-id2837 . -1) (undo-tree-id2839 . -1) (undo-tree-id2841 . -1) (undo-tree-id2843 . -1) (undo-tree-id2845 . -1) (undo-tree-id2847 . -1) (undo-tree-id2849 . -1) (undo-tree-id2851 . -1) (undo-tree-id2853 . -1) (undo-tree-id2855 . -1) (undo-tree-id2857 . -1) (#("of" 0 1 (fontified nil) 1 2 (fontified nil)) . 1328) (1328 . 1330) (#("if" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 1328) (undo-tree-id2859 . -2) (undo-tree-id2860 . -2) (undo-tree-id2861 . 2) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1330) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2866 . -1) (undo-tree-id2868 . -1) (undo-tree-id2870 . -1) (#("inicio " 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 1331) (undo-tree-id2872 . -7) (undo-tree-id2873 . -7) (undo-tree-id2875 . -7) (#(">= fin" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1338) (undo-tree-id2877 . -6) (undo-tree-id2878 . -6) (undo-tree-id2880 . -6) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1345) (#("
	    " 0 1 (fontified nil) 1 6 (fontified nil)) . 1346) (undo-tree-id2883 . -6) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1352) (1347 . 1352) (#("	" 0 1 (fontified nil)) . 1347) (#("	" 0 1 (fontified t)) . 1348) (#(" " 0 1 (fontified nil)) . 1345) (#(" " 0 1 (fontified nil)) . 1330) (#("	" 0 1 (fontified nil)) . 1328) (undo-tree-id2888 . -1) (undo-tree-id2890 . -1) (undo-tree-id2892 . -1) (undo-tree-id2894 . -1) (#("        " 0 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1328) (undo-tree-id2896 . -7) (undo-tree-id2898 . -7) (undo-tree-id2900 . -7) (undo-tree-id2902 . -7) (undo-tree-id2904 . -6) (undo-tree-id2906 . -6) (undo-tree-id2908 . -6) (undo-tree-id2910 . -6) (undo-tree-id2912 . -6) (undo-tree-id2914 . -6) (undo-tree-id2916 . -6) (undo-tree-id2918 . -6) (undo-tree-id2920 . -6) (undo-tree-id2922 . -6) (undo-tree-id2924 . -6) (undo-tree-id2926 . -6) (undo-tree-id2928 . -6) (1320 . 1337) 1319) ((#("fin){

	        	" 0 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face (rainbow-delimiters-depth-2-face)) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 6 (fontified t) 6 7 (fontified nil) 7 8 (fontified nil) 8 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil)) . 1320) (undo-tree-id4476 . -6) (undo-tree-id4477 . -6) (undo-tree-id4478 . -6) (undo-tree-id4479 . -6) (undo-tree-id4480 . -6) (undo-tree-id4481 . -6) (undo-tree-id4482 . -6) (undo-tree-id4483 . -6) (undo-tree-id4484 . -6) (1328 . 1336) (1328 . 1329) (1330 . 1331) (1345 . 1346) (1347 . 1349) (#("	    " 0 5 (fontified nil)) . 1347) (1345 . 1353) (1331 . 1344) (1328 . 1332) (#("of" 0 1 (fontified nil) 1 2 (fontified nil)) . 1328) (1327 . 1330) (1328 . 1329) (#("	" 0 1 (fontified nil)) . 1327) (1327 . 1329) (#("        " 0 8 (fontified nil)) . 1326) (undo-tree-id4485 . -8) (undo-tree-id4486 . -8) (undo-tree-id4487 . -8) (undo-tree-id4488 . -8) (undo-tree-id4489 . -8) (undo-tree-id4490 . -8) (undo-tree-id4491 . -8) (undo-tree-id4492 . -8) (undo-tree-id4493 . -8) (1334 . 1335)) (25220 25539 738034 130000) 0 nil])
([nil nil ((#("inicio]" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face))) . -1621) (undo-tree-id4697 . -7) (undo-tree-id4698 . 1) (undo-tree-id4699 . -7) 1628) nil (25220 25641 830664 827000) 0 nil])
([nil nil ((1328 . 1329) (#("	" 0 1 (fontified nil)) . 1327) (undo-tree-id2721 . -1) (1327 . 1329) (#("        " 0 8 (fontified nil)) . 1326) (undo-tree-id2722 . -8) (undo-tree-id2723 . -8) (undo-tree-id2724 . -8) (undo-tree-id2726 . -8) (undo-tree-id2728 . -8) (undo-tree-id2730 . -8) (undo-tree-id2732 . -8) (undo-tree-id2734 . -8) (undo-tree-id2736 . -8) (undo-tree-id2738 . -8) (undo-tree-id2740 . -8) (undo-tree-id2742 . -8) (undo-tree-id2744 . -8) (undo-tree-id2746 . -8) (undo-tree-id2748 . -8) (undo-tree-id2750 . -8) (undo-tree-id2752 . -8) (undo-tree-id2754 . -8) (undo-tree-id2756 . -8) (undo-tree-id2758 . -8) (undo-tree-id2760 . -8) (undo-tree-id2762 . -8) (undo-tree-id2764 . -8) (undo-tree-id2766 . -8) (1334 . 1335) (t 25220 25131 721149 612000)) ((#("
" 0 1 (fontified nil)) . 1334) (undo-tree-id4474 . -1) (1326 . 1334) (#("	
" 0 1 (fontified nil) 1 2 (fontified nil)) . 1327) (undo-tree-id4475 . -2) (1327 . 1328) (#("	" 0 1 (fontified t c-in-sws t c-is-sws t)) . 1328)) (25220 25539 307480 511000) 0 nil])
([nil nil ((#("arreglo[" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face))) . -1613) (undo-tree-id4696 . -8) 1621) nil (25220 25641 830655 107000) 0 nil])
([nil nil ((1326 . 1327)) ((#("	" 0 1 (fontified t)) . 1326) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1)) (25220 25539 81638 693000) 0 nil])
([nil nil ((1613 . 1618)) nil (25220 25641 830649 172000) 0 nil])
([nil nil ((1327 . 1328) (#("	" 0 1 (fontified nil)) . 1326) (undo-tree-id2720 . -1) (1327 . 1328)) ((#("
" 0 1 (fontified nil)) . 1327) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (1326 . 1327) (#("	" 0 1 (fontified t)) . 1327) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1)) (25220 25538 929686 609000) 0 nil])
([nil nil ((#("pviot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1613) (undo-tree-id4695 . -5) 1618) nil (25220 25641 830644 771000) 0 nil])
([nil nil ((1328 . 1330)) ((#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . 1328) (undo-tree-id4066 . -2) (undo-tree-id4067 . -2) (undo-tree-id4068 . -2) (undo-tree-id4069 . -2) (undo-tree-id4070 . -2) (undo-tree-id4071 . -2) (undo-tree-id4072 . -2) (undo-tree-id4073 . -2) (undo-tree-id4074 . -2) (undo-tree-id4075 . -2) (undo-tree-id4076 . -2) (undo-tree-id4077 . -2) (undo-tree-id4078 . -2) (undo-tree-id4079 . -2) (undo-tree-id4080 . -2) (undo-tree-id4081 . -2) (undo-tree-id4082 . -2) (undo-tree-id4083 . -2) (undo-tree-id4084 . -2) (undo-tree-id4085 . -2) (undo-tree-id4086 . -2) (undo-tree-id4087 . -2) (undo-tree-id4088 . -2) (undo-tree-id4089 . -2) (undo-tree-id4090 . -2) (undo-tree-id4091 . -2) (undo-tree-id4092 . -2) (undo-tree-id4093 . -2) (undo-tree-id4094 . -2) (undo-tree-id4095 . -2) (undo-tree-id4096 . -2) (undo-tree-id4097 . -2) (undo-tree-id4098 . -2) (undo-tree-id4099 . -2) (undo-tree-id4100 . -2) (undo-tree-id4101 . -2) (undo-tree-id4102 . -2) (undo-tree-id4103 . -2) (undo-tree-id4104 . -2) (undo-tree-id4105 . -2) (undo-tree-id4106 . -2) (undo-tree-id4107 . -2) (undo-tree-id4108 . -2) (undo-tree-id4109 . -2) (undo-tree-id4110 . -2) (undo-tree-id4111 . -2) (undo-tree-id4112 . -2) (undo-tree-id4113 . -2) (undo-tree-id4114 . -2) (undo-tree-id4115 . -2) (undo-tree-id4116 . -2) (undo-tree-id4117 . -2) (undo-tree-id4118 . -2) (undo-tree-id4119 . -2) (undo-tree-id4120 . -2) (undo-tree-id4121 . -2) (undo-tree-id4122 . -2) (undo-tree-id4123 . -2) (undo-tree-id4124 . -2) (undo-tree-id4125 . -2) (undo-tree-id4126 . -2) (undo-tree-id4127 . -2) (undo-tree-id4128 . -2) (undo-tree-id4129 . -2) (undo-tree-id4130 . -2) (undo-tree-id4131 . -2) (undo-tree-id4132 . -2) (undo-tree-id4133 . -2) (undo-tree-id4134 . -2) (undo-tree-id4135 . -2) (undo-tree-id4136 . -2) (undo-tree-id4137 . -2) (undo-tree-id4138 . -2) (undo-tree-id4139 . -2) (undo-tree-id4140 . -2) (undo-tree-id4141 . -2) (undo-tree-id4142 . -2) (undo-tree-id4143 . -2) (undo-tree-id4144 . -2) (undo-tree-id4145 . -2) (undo-tree-id4146 . -2) (undo-tree-id4147 . -2) (undo-tree-id4148 . -2) (undo-tree-id4149 . -2) (undo-tree-id4150 . -2) (undo-tree-id4151 . -2) (undo-tree-id4152 . -2) (undo-tree-id4153 . -2) (undo-tree-id4154 . -2) (undo-tree-id4155 . -2) (undo-tree-id4156 . -2) (undo-tree-id4157 . -2) (undo-tree-id4158 . -2) (undo-tree-id4159 . -2) (undo-tree-id4160 . -2)) (25220 25538 781467 693000) 0 nil])
([nil nil ((1613 . 1619)) nil (25220 25641 830616 235000) 0 nil])
([nil nil ((1330 . 1331)) ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1330) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1)) (25220 25538 608719 950000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1723) (undo-tree-id4915 . -1) (#(" " 0 1 (fontified t)) . -1724) (undo-tree-id4916 . -1) (#(" " 0 1 (fontified t)) . -1725) (undo-tree-id4917 . -1) (#(" " 0 1 (fontified t)) . -1726) (undo-tree-id4918 . -1) (#(" " 0 1 (fontified t)) . -1727) (undo-tree-id4919 . -1) (#(" " 0 1 (fontified t)) . -1728) (undo-tree-id4920 . -1) (#(" " 0 1 (fontified t)) . -1729) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (#(" " 0 1 (fontified t)) . -1730) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (#(" " 0 1 (fontified nil)) . -1731) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (#("	" 0 1 (fontified nil)) . 1732) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (1724 . 1732) 1725 (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -1725) (undo-tree-id4929 . -1) (undo-tree-id4930 . 1) (undo-tree-id4931 . -1) 1726 (t 25220 25641 860741 433000)) nil (25220 25699 490437 795000) 0 nil])
([nil nil ((1331 . 1346)) ((#("inicio >= final" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face font-lock-keyword-face)) . 1331) (undo-tree-id3897 . -15) (undo-tree-id3898 . -15) (undo-tree-id3899 . -13) (undo-tree-id3900 . -13) (undo-tree-id3901 . -13) (undo-tree-id3902 . -13) (undo-tree-id3903 . -13) (undo-tree-id3904 . -13) (undo-tree-id3905 . -13) (undo-tree-id3906 . -13) (undo-tree-id3907 . -13) (undo-tree-id3908 . -13) (undo-tree-id3909 . -13) (undo-tree-id3910 . -13) (undo-tree-id3911 . -13) (undo-tree-id3912 . -13) (undo-tree-id3913 . -13) (undo-tree-id3914 . -13) (undo-tree-id3915 . -13) (undo-tree-id3916 . -13) (undo-tree-id3917 . -13) (undo-tree-id3918 . -13) (undo-tree-id3919 . -13) (undo-tree-id3920 . -13) (undo-tree-id3921 . -13) (undo-tree-id3922 . -13) (undo-tree-id3923 . -13) (undo-tree-id3924 . -13) (undo-tree-id3925 . -13) (undo-tree-id3926 . -13) (undo-tree-id3927 . -13) (undo-tree-id3928 . -13) (undo-tree-id3929 . -13) (undo-tree-id3930 . -13) (undo-tree-id3931 . -13) (undo-tree-id3932 . -13) (undo-tree-id3933 . -13) (undo-tree-id3934 . -13) (undo-tree-id3935 . -13) (undo-tree-id3936 . -13) (undo-tree-id3937 . -13) (undo-tree-id3938 . -13) (undo-tree-id3939 . -13) (undo-tree-id3940 . -13) (undo-tree-id3941 . -13) (undo-tree-id3942 . -13) (undo-tree-id3943 . -13) (undo-tree-id3944 . -13) (undo-tree-id3945 . -13) (undo-tree-id3946 . -13) (undo-tree-id3947 . -13) (undo-tree-id3948 . -13) (undo-tree-id3949 . -13) (undo-tree-id3950 . -13) (undo-tree-id3951 . -13) (undo-tree-id3952 . -13) (undo-tree-id3953 . -13) (undo-tree-id3954 . -13) (undo-tree-id3955 . -13) (undo-tree-id3956 . -13) (undo-tree-id3957 . -13) (undo-tree-id3958 . -13) (undo-tree-id3959 . -13) (undo-tree-id3960 . -13) (undo-tree-id3961 . -13) (undo-tree-id3962 . -13) (undo-tree-id3963 . -13) (undo-tree-id3964 . -13) (undo-tree-id3965 . -13) (undo-tree-id3966 . -13) (undo-tree-id3967 . -13) (undo-tree-id3968 . -13) (undo-tree-id3969 . -13) (undo-tree-id3970 . -13) (undo-tree-id3971 . -15) (undo-tree-id3972 . -15) (undo-tree-id3973 . -15) (undo-tree-id3974 . -15) (undo-tree-id3975 . -15) (undo-tree-id3976 . -15) (undo-tree-id3977 . -15)) (25220 25538 454210 899000) 0 nil])
([nil nil ((#("	if(inicio < i-1){
" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face (rainbow-delimiters-depth-3-face)) 4 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face font-lock-type-face) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-3-face)) 17 18 (fontified t face (rainbow-delimiters-depth-3-face)) 18 19 (fontified t)) . 1667) (undo-tree-id4897 . -4) (undo-tree-id4898 . -4) (undo-tree-id4899 . -4) (undo-tree-id4900 . -4) (undo-tree-id4901 . -4) (undo-tree-id4902 . -4) (undo-tree-id4903 . -4) (undo-tree-id4904 . -4) (undo-tree-id4905 . -4) (undo-tree-id4906 . -4) (undo-tree-id4907 . -4) (undo-tree-id4908 . -4) (undo-tree-id4909 . -4) (undo-tree-id4910 . -4) (undo-tree-id4911 . -4) (undo-tree-id4912 . -4) (undo-tree-id4913 . -4) (undo-tree-id4914 . -4) 1671) nil (25220 25699 490352 706000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1344) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (#("l" 0 1 (fontified t face font-lock-keyword-face)) . -1345) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) 1346) ((1344 . 1346)) (25220 25538 247914 263000) 0 nil])
([nil nil ((#("	if(i+1 < fin){
" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face (rainbow-delimiters-depth-4-face)) 4 9 (fontified t) 9 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-4-face)) 14 15 (fontified t face (rainbow-delimiters-depth-4-face)) 15 16 (fontified t)) . 1705) (undo-tree-id4879 . -4) (undo-tree-id4880 . -4) (undo-tree-id4881 . -4) (undo-tree-id4882 . -4) (undo-tree-id4883 . -4) (undo-tree-id4884 . -4) (undo-tree-id4885 . -4) (undo-tree-id4886 . -4) (undo-tree-id4887 . -4) (undo-tree-id4888 . -4) (undo-tree-id4889 . -4) (undo-tree-id4890 . -4) (undo-tree-id4891 . -4) (undo-tree-id4892 . -4) (undo-tree-id4893 . -4) (undo-tree-id4894 . -4) (undo-tree-id4895 . -4) (undo-tree-id4896 . -4) 1709) nil (25220 25699 490276 120000) 0 nil])
([nil nil ((1344 . 1345)) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1344) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1)) (25220 25538 16000 126000) 0 nil])
([nil nil ((#("	}
" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-4-face)) 2 3 (fontified t)) . 1740) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . 2) (undo-tree-id4854 . -2) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) 1741) nil (25220 25699 489731 860000) 0 nil])
([nil nil ((1345 . 1351)) ((#("
	    " 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t)) . 1345) (undo-tree-id3770 . -6) (undo-tree-id3771 . -6) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -2) (undo-tree-id3803 . -2) (undo-tree-id3804 . -2) (undo-tree-id3805 . -2) (undo-tree-id3806 . -2) (undo-tree-id3807 . -2) (undo-tree-id3808 . -2) (undo-tree-id3809 . -2) (undo-tree-id3810 . -2) (undo-tree-id3811 . -2) (undo-tree-id3812 . -2) (undo-tree-id3813 . -2) (undo-tree-id3814 . -2) (undo-tree-id3815 . -2) (undo-tree-id3816 . -6) (undo-tree-id3817 . -6) (undo-tree-id3818 . -6) (undo-tree-id3819 . -6) (undo-tree-id3820 . -6) (undo-tree-id3821 . -6) (undo-tree-id3822 . -6) (undo-tree-id3823 . -6) (undo-tree-id3824 . -6) (undo-tree-id3825 . -6) (undo-tree-id3826 . -6) (undo-tree-id3827 . -6) (undo-tree-id3828 . -6) (undo-tree-id3829 . -6)) (25220 25537 856846 587000) 0 nil])
([nil nil ((1667 . 1668) (#("	    " 0 5 (fontified t)) . -1667) (undo-tree-id4765 . -5) (undo-tree-id4766 . -5) (undo-tree-id4767 . -5) (undo-tree-id4768 . -5) (undo-tree-id4769 . -5) (undo-tree-id4770 . -5) (undo-tree-id4771 . -5) (undo-tree-id4772 . -5) (undo-tree-id4773 . -5) (undo-tree-id4774 . -5) (undo-tree-id4775 . -5) (undo-tree-id4776 . -5) (undo-tree-id4777 . -5) (undo-tree-id4778 . -5) (undo-tree-id4779 . -5) (undo-tree-id4780 . -5) (undo-tree-id4781 . -5) (undo-tree-id4782 . -5) (undo-tree-id4783 . -5) (undo-tree-id4784 . -5) (undo-tree-id4785 . -5) (undo-tree-id4786 . -5) (undo-tree-id4787 . -5) (undo-tree-id4788 . -5) (undo-tree-id4789 . -5) (undo-tree-id4790 . -5) (undo-tree-id4791 . -5) (undo-tree-id4792 . -5) (undo-tree-id4793 . -5) (undo-tree-id4794 . -5) (undo-tree-id4795 . -5) (undo-tree-id4796 . -5) (undo-tree-id4797 . -5) (undo-tree-id4798 . -5) (undo-tree-id4799 . -5) (undo-tree-id4800 . -5) (undo-tree-id4801 . -4) (undo-tree-id4802 . -4) (undo-tree-id4803 . -4) (undo-tree-id4804 . -4) (undo-tree-id4805 . -4) (undo-tree-id4806 . -4) (undo-tree-id4807 . -4) (undo-tree-id4808 . -4) (undo-tree-id4809 . -4) (undo-tree-id4810 . -4) (undo-tree-id4811 . -4) (undo-tree-id4812 . -4) (undo-tree-id4813 . -4) (undo-tree-id4814 . -4) (undo-tree-id4815 . -4) (undo-tree-id4816 . -4) (undo-tree-id4817 . -4) (undo-tree-id4818 . -4) (undo-tree-id4819 . -4) (undo-tree-id4820 . -4) (undo-tree-id4821 . -4) (undo-tree-id4822 . -4) (undo-tree-id4823 . -4) (undo-tree-id4824 . -4) (undo-tree-id4825 . -4) (undo-tree-id4826 . -4) (undo-tree-id4827 . -4) (undo-tree-id4828 . -5) (undo-tree-id4829 . -5) (undo-tree-id4830 . -5) (undo-tree-id4831 . -5) (undo-tree-id4832 . -5) (undo-tree-id4833 . -5) (undo-tree-id4834 . -5) (undo-tree-id4835 . -5) (undo-tree-id4836 . -5) (undo-tree-id4837 . -5) (undo-tree-id4838 . -5) (undo-tree-id4839 . -5) (undo-tree-id4840 . -5) (undo-tree-id4841 . -5) (undo-tree-id4842 . -5) (undo-tree-id4843 . -5) 1672) nil (25220 25699 489588 343000) 0 nil])
([nil nil ((1351 . 1357)) ((#("return" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face)) . 1351) (undo-tree-id3761 . -6) (undo-tree-id3762 . -6) (undo-tree-id3763 . -6) (undo-tree-id3764 . -6) (undo-tree-id3765 . -6) (undo-tree-id3766 . -6) (undo-tree-id3767 . -6) (undo-tree-id3768 . -6) (undo-tree-id3769 . -6)) (25220 25537 696081 881000) 0 nil])
([nil nil ((1701 . 1702) (#("	    " 0 5 (fontified t)) . 1701) (undo-tree-id4700 . -1) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -4) (undo-tree-id4704 . -4) (undo-tree-id4705 . -4) (undo-tree-id4706 . -4) (undo-tree-id4707 . -4) (undo-tree-id4708 . -4) (undo-tree-id4709 . -4) (undo-tree-id4710 . -5) (undo-tree-id4711 . -5) (undo-tree-id4712 . -5) (undo-tree-id4713 . -5) (undo-tree-id4714 . -5) (undo-tree-id4715 . -5) (undo-tree-id4716 . -5) (undo-tree-id4717 . -5) (undo-tree-id4718 . -5) (undo-tree-id4719 . -5) (undo-tree-id4720 . -5) (undo-tree-id4721 . -5) (undo-tree-id4722 . -5) (undo-tree-id4723 . -5) (undo-tree-id4724 . -5) (undo-tree-id4725 . -5) (undo-tree-id4726 . -5) (undo-tree-id4727 . -5) (undo-tree-id4728 . -5) (undo-tree-id4729 . -5) (undo-tree-id4730 . -5) (undo-tree-id4731 . -5) (undo-tree-id4732 . -5) (undo-tree-id4733 . -5) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -5) (undo-tree-id4743 . -5) (undo-tree-id4744 . -5) (undo-tree-id4745 . -5) (undo-tree-id4746 . -5) (undo-tree-id4747 . -5) (undo-tree-id4748 . -5) (undo-tree-id4749 . -5) (undo-tree-id4750 . -5) (undo-tree-id4751 . -5) (undo-tree-id4752 . -5) (undo-tree-id4753 . -5) (undo-tree-id4754 . -5) (undo-tree-id4755 . -5) (undo-tree-id4756 . -5) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) 1702) nil (25220 25699 489283 24000) 0 nil])
([nil nil ((1347 . 1348) (#("    " 0 4 (fontified t)) . -1347) 1351 (1357 . 1358)) ((#(";" 0 1 (fontified nil)) . 1357) (1347 . 1351) (#("	" 0 1 (fontified t)) . 1347) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1)) (25220 25537 539322 533000) 0 nil])
([nil nil ((1684 . 1689) (#("	" 0 1 (fontified t)) . 1684) 1701 (1681 . 1682) (#("1" 0 1 (fontified t)) . -1681) (undo-tree-id4932 . -1) 1682 (1679 . 1682) (1670 . 1676) (#("i" 0 1 (fontified t)) . -1670) (undo-tree-id4933 . -1) 1671 (#("f" 0 1 (fontified t face font-lock-type-face)) . -1674) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -1675) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -1676) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) 1677 (1673 . 1677) (#(" " 0 1 (fontified t)) . -1673) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (#("j" 0 1 (fontified t face font-lock-type-face)) . -1674) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) 1675 (1674 . 1675) (#("k" 0 1 (fontified t face font-lock-type-face)) . -1674) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) 1675 (1670 . 1675) (1669 . 1671) (1667 . 1669) (1666 . 1667) (t 25220 25699 529374 297000)) nil (25220 25790 6559 221000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1352) (undo-tree-id2712 . -1) (#(" " 0 1 (fontified t)) . -1353) (undo-tree-id2713 . -1) (#(" " 0 1 (fontified nil)) . -1354) (undo-tree-id2714 . -1) (#("	" 0 1 (fontified nil)) . 1355) (undo-tree-id2715 . -1) (1347 . 1355) 1348) ((#("        " 0 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1347) (undo-tree-id3744 . -5) (undo-tree-id3745 . -5) (undo-tree-id3746 . -5) (undo-tree-id3747 . -5) (undo-tree-id3748 . -5) (undo-tree-id3749 . -5) (undo-tree-id3750 . -5) (undo-tree-id3751 . -5) (1352 . 1356)) (25220 25537 389093 289000) 0 nil])
([nil nil ((1735 . 1736) (1726 . 1735) (1725 . 1726) (1723 . 1725) (1722 . 1723) (1722 . 1723) 1742) nil (25220 25790 6494 5000) 0 nil])
([nil nil ((1346 . 1351) (#("	     " 0 1 (fontified t) 1 6 (fontified t)) . -1346) (undo-tree-id2711 . -6) 1352) ((1346 . 1352) (#("	    " 0 5 (fontified t)) . 1346) (undo-tree-id3713 . -5) (undo-tree-id3714 . -5) (undo-tree-id3715 . -5) (undo-tree-id3716 . -5) (undo-tree-id3717 . -5) (undo-tree-id3718 . -5) (undo-tree-id3719 . -5) (undo-tree-id3720 . -5) (undo-tree-id3721 . -5) (undo-tree-id3722 . -5) (undo-tree-id3723 . -5) (undo-tree-id3724 . -5) (undo-tree-id3725 . -5) (undo-tree-id3726 . -5) (undo-tree-id3727 . -5) (undo-tree-id3728 . -5) (undo-tree-id3729 . -5) (undo-tree-id3730 . -5) (undo-tree-id3731 . -5) (undo-tree-id3732 . -5) (undo-tree-id3733 . -5) (undo-tree-id3734 . -5) (undo-tree-id3735 . -5) (undo-tree-id3736 . -5) (undo-tree-id3737 . -5) (undo-tree-id3738 . -5) (undo-tree-id3739 . -5) (undo-tree-id3740 . -5) (undo-tree-id3741 . -5) (undo-tree-id3742 . -5) (undo-tree-id3743 . -5)) (25220 25537 238222 392000) 0 nil])
([nil nil ((1737 . 1742) (#("	" 0 1 (fontified t)) . 1737) 1750) nil (25220 25790 6478 296000) 0 nil])
([nil nil ((1351 . 1358) (#("return" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil face font-lock-keyword-face)) . 1351) (#("arreglo : int[]" 0 15 (fontified nil)) . -1351) (1351 . 1366)) ((#("arreglo : int[]" 0 15 (fontified nil)) . 1351) (1351 . 1366) (1351 . 1357) (#("arreglo" 0 7 (fontified t)) . 1351) (undo-tree-id3704 . -7) (undo-tree-id3705 . -7) (undo-tree-id3706 . -7) (undo-tree-id3707 . -7) (undo-tree-id3708 . -7) (undo-tree-id3709 . -7) (undo-tree-id3710 . -7) (undo-tree-id3711 . -7) (undo-tree-id3712 . -7)) (25220 25537 43905 464000) 0 nil])
([nil nil ((1567 . 1568) (1567 . 1568) (1568 . 1573) (#("	    " 0 5 (fontified nil)) . 1567) (undo-tree-id4954 . -5) (1572 . 1573) (1505 . 1510) (#("		" 0 2 (fontified t)) . 1505) (undo-tree-id4955 . -1) 1506 (#("f" 0 1 (fontified t)) . -1504) (undo-tree-id4956 . -1) (#("i" 0 1 (fontified t)) . -1505) (undo-tree-id4957 . -1) (#("n" 0 1 (fontified t)) . -1506) (undo-tree-id4958 . -1) 1507 (1504 . 1507) (#("fin : int" 0 9 (fontified nil)) . -1504) (1504 . 1513) (1488 . 1490) (#("	" 0 1 (fontified nil)) . -1488) (undo-tree-id4959 . -1) (#("	" 0 1 (fontified t)) . 1489) (1498 . 1503) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . -1498) (undo-tree-id4960 . -2) 1500 (1491 . 1493) (#("			" 0 1 (fontified t) 1 3 (fontified t)) . 1491) (undo-tree-id4961 . -2) 1493 (#("    " 0 4 (fontified t)) . 1490) (1452 . 1457) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 1452) 1458 (1485 . 1491) (1453 . 1454) (#("    " 0 4 (fontified nil)) . -1453) 1457 (1462 . 1463) (1484 . 1485) (#("		" 0 2 (fontified t)) . 1486) (1489 . 1490) 1491 (1497 . 1498) (#("    " 0 4 (fontified t)) . -1497) 1501 (1496 . 1501) (1496 . 1497) (1497 . 1499) (#("	    " 0 5 (fontified nil)) . 1496) (undo-tree-id4962 . -5) (1501 . 1502) (1485 . 1488) (1484 . 1485) (t 25220 25790 34367 502000)) nil (25220 25957 636901 178000) 0 nil])
([nil nil ((#("arreglo" 0 7 (fontified t)) . -1351) (undo-tree-id2707 . -7) (undo-tree-id2709 . -7) 1358) ((1351 . 1358)) (25220 25536 898305 110000) 0 nil])
([nil nil ((1508 . 1509) (1500 . 1508) (1497 . 1500) (1580 . 1581) (1575 . 1580) (1572 . 1575) (1566 . 1572)) nil (25220 25957 636853 993000) 0 nil])
([nil nil ((1351 . 1357)) ((#("return" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face)) . 1351) (undo-tree-id3694 . -6) (undo-tree-id3695 . -6) (undo-tree-id3696 . -6) (undo-tree-id3697 . -6) (undo-tree-id3698 . -6) (undo-tree-id3699 . -6) (undo-tree-id3700 . -6) (undo-tree-id3701 . -6) (undo-tree-id3702 . -6) (undo-tree-id3703 . -6)) (25220 25536 729980 838000) 0 nil])
([nil nil ((#("		
" 0 2 (fontified t) 2 3 (fontified t)) . 1488) (undo-tree-id4952 . 1) (undo-tree-id4953 . -1) 1489) nil (25220 25957 636847 167000) 0 nil])
([nil nil ((1351 . 1357) (#("return" 0 6 (fontified nil)) . 1351) (1351 . 1357) (#("return" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face)) . -1351) (undo-tree-id2654 . -6) (undo-tree-id2655 . -6) (undo-tree-id2656 . -6) (undo-tree-id2658 . -6) (undo-tree-id2660 . -6) (undo-tree-id2662 . -6) (undo-tree-id2664 . -6) (undo-tree-id2666 . -6) (undo-tree-id2668 . -6) (undo-tree-id2670 . -6) (undo-tree-id2672 . -6) (undo-tree-id2674 . -6) (undo-tree-id2676 . -6) (undo-tree-id2678 . -6) (undo-tree-id2680 . -6) (undo-tree-id2682 . -6) (undo-tree-id2684 . -6) (undo-tree-id2686 . -6) (undo-tree-id2688 . -6) (undo-tree-id2690 . -6) (undo-tree-id2692 . -6) (undo-tree-id2694 . -6) (undo-tree-id2696 . -6) (undo-tree-id2698 . -6) (undo-tree-id2700 . -6) (undo-tree-id2702 . -6) (undo-tree-id2704 . -6) (undo-tree-id2706 . -6) 1357) ((1351 . 1357) (#("return" 0 6 (fontified nil)) . 1351) (1351 . 1357) (#("return" 0 6 (fontified t face font-lock-keyword-face)) . 1351)) (25220 25536 514897 644000) 0 nil])
([nil nil ((1594 . 1595) (#("	    " 0 5 (fontified t)) . 1594) (undo-tree-id4951 . -1) 1595) nil (25220 25957 636838 745000) 0 nil])
([nil nil ((1550 . 1551) (t 25220 25283 528809 58000)) ((#("=" 0 1 (fontified t)) . 1550) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1)) (25220 25536 340351 991000) 0 nil])
([nil nil ((1628 . 1632) (#("	" 0 1 (fontified t)) . -1628) (undo-tree-id4950 . -1) 1629) nil (25220 25957 636831 547000) 0 nil])
([nil nil ((1606 . 1611) (#("	   " 0 1 (fontified t) 1 4 (fontified t)) . -1606) (undo-tree-id3019 . -4) 1610 (#(" " 0 1 (fontified t)) . -1610) (undo-tree-id3020 . -1) (#(" " 0 1 (fontified t)) . -1611) (undo-tree-id3021 . -1) (#(" " 0 1 (fontified t)) . -1612) (undo-tree-id3022 . -1) (#(" " 0 1 (fontified t)) . -1613) (undo-tree-id3023 . -1) (#(" " 0 1 (fontified nil)) . -1614) (undo-tree-id3024 . -1) (#("	" 0 1 (fontified nil)) . 1615) (undo-tree-id3025 . -1) (1607 . 1615) 1608 (#("i" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -1605) (undo-tree-id3026 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1606) (undo-tree-id3027 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1607) (undo-tree-id3028 . -1) 1608 (#("arreglo[" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-5-face))) . -1608) (undo-tree-id3029 . -8) 1616 (#("i] > " 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-5-face)) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1616) (undo-tree-id3030 . -5) 1621 (#("pivote && " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . -1621) (undo-tree-id3031 . -10) 1631 (#("arreglo[" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-5-face))) . -1631) (undo-tree-id3032 . -8) 1639 (#("j] <= " 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-5-face)) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1639) (undo-tree-id3033 . -6) 1645 (#("pivote) {" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-4-face))) . -1645) (undo-tree-id3034 . -9) 1654 (#("
" 0 1 (fontified t)) . -1684) (undo-tree-id3035 . -1) 1685 (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1690) (undo-tree-id3036 . -1) (undo-tree-id3037 . 1) (undo-tree-id3038 . -1) 1691 (1551 . 1552) (#("=" 0 1 (fontified t)) . -1550) (undo-tree-id3039 . -1) 1551 (t 25220 25315 969165 69000)) ((1550 . 1551) (#("=" 0 1 (fontified t)) . 1551) (1690 . 1691) (1684 . 1685) (1605 . 1654) (#("        " 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1607) (1606 . 1616) (#("	    " 0 5 (fontified t)) . 1606)) (25220 25536 111802 403000) 0 nil])
([nil nil ((1634 . 1638) (#("	" 0 1 (fontified t)) . -1634) (undo-tree-id4949 . -1) 1635) nil (25220 25957 636823 526000) 0 nil])
([nil nil ((#("	    
" 0 3 (fontified t) 3 5 (fontified t) 5 6 (fontified t)) . 1600) (undo-tree-id3018 . -4) 1604) ((1600 . 1606)) (25220 25535 814226 849000) 0 nil])
([nil nil ((1568 . 1569)) nil (25220 25957 636801 629000) 0 nil])
([nil nil ((#("pivote" 0 6 (fontified t)) . -1576) (undo-tree-id3542 . -6) 1582 (t 25220 25370 229760 534000)) ((1576 . 1582)) (25220 25535 654724 625000) 0 nil])
([nil nil ((1568 . 1569)) nil (25220 25957 636789 943000) 0 nil])
([nil nil ((#("i] > " 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-5-face)) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1571) (undo-tree-id3541 . -5) 1576) ((1571 . 1576)) (25220 25535 491659 109000) 0 nil])
([nil nil ((1578 . 1580) (#("	    " 0 5 (fontified t)) . 1578) 1590 (t 25220 25957 665207 107000)) nil (25220 25965 435459 538000) 0 nil])
([nil nil ((#("arreglo[" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-5-face))) . -1563) (undo-tree-id3540 . -8) 1571) ((1563 . 1571)) (25220 25535 352034 94000) 0 nil])
([nil nil ((1590 . 1595) (#("	" 0 1 (fontified t)) . -1590) (undo-tree-id4964 . -1) 1591) nil (25220 25965 435454 244000) 0 nil])
([nil nil ((#("pivote && " 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . -1553) (undo-tree-id3536 . -6) (undo-tree-id3537 . -6) (undo-tree-id3538 . -6) (undo-tree-id3539 . -10) 1563) ((1553 . 1563)) (25220 25535 214021 422000) 0 nil])
([nil nil ((1597 . 1602) (#("	" 0 1 (fontified t)) . 1597) 1602) nil (25220 25965 435447 93000) 0 nil])
([nil nil ((1553 . 1557)) ((#("pivo" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1553) (undo-tree-id3661 . -4) (undo-tree-id3662 . -4) (undo-tree-id3663 . -4) (undo-tree-id3664 . -4) (undo-tree-id3665 . -4) (undo-tree-id3666 . -4) (undo-tree-id3667 . -4) (undo-tree-id3668 . -4) (undo-tree-id3669 . -4) (undo-tree-id3670 . -4) (undo-tree-id3671 . -4) (undo-tree-id3672 . -4) (undo-tree-id3673 . -4) (undo-tree-id3674 . -4) (undo-tree-id3675 . -4) (undo-tree-id3676 . -4) (undo-tree-id3677 . -4) (undo-tree-id3678 . -4) (undo-tree-id3679 . -4) (undo-tree-id3680 . -4) (undo-tree-id3681 . -4) (undo-tree-id3682 . -4) (undo-tree-id3683 . -4) (undo-tree-id3684 . -4) (undo-tree-id3685 . -4) (undo-tree-id3686 . -4) (undo-tree-id3687 . -4) (undo-tree-id3688 . -4) (undo-tree-id3689 . -4) (undo-tree-id3690 . -4) (undo-tree-id3691 . -4)) (25220 25535 76514 643000) 0 nil])
([nil nil ((1635 . 1636) (#("    " 0 4 (fontified t)) . -1635) (undo-tree-id4963 . -4) 1639) nil (25220 25965 435441 764000) 0 nil])
([nil nil ((1557 . 1559)) ((#("re" 0 1 (fontified t) 1 2 (fontified t)) . 1557) (undo-tree-id3652 . -2) (undo-tree-id3653 . -2) (undo-tree-id3654 . -2) (undo-tree-id3655 . -2) (undo-tree-id3656 . -2) (undo-tree-id3657 . -2) (undo-tree-id3658 . -2) (undo-tree-id3659 . -2) (undo-tree-id3660 . -2)) (25220 25534 930433 552000) 0 nil])
([nil nil ((1638 . 1639) (#("    " 0 4 (fontified t)) . 1638) 1646) nil (25220 25965 435411 63000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1557) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (#("e" 0 1 (fontified t)) . -1558) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) 1559) ((1557 . 1559)) (25220 25534 771610 1000) 0 nil])
([nil nil ((1580 . 1585) (#("continue" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face)) . -1580) (undo-tree-id5059 . -8) (undo-tree-id5060 . -8) 1588 (t 25220 25965 471292 772000)) nil (25220 26085 232741 268000) 0 nil])
([nil nil ((1557 . 1559)) ((#("te" 0 1 (fontified t) 1 2 (fontified t)) . 1557) (undo-tree-id3642 . -1) (undo-tree-id3643 . -2) (undo-tree-id3644 . -2) (undo-tree-id3645 . -2) (undo-tree-id3646 . -2) (undo-tree-id3647 . -2) (undo-tree-id3648 . -2) (undo-tree-id3649 . -2) (undo-tree-id3650 . -2) (undo-tree-id3651 . -2)) (25220 25534 649839 339000) 0 nil])
([nil nil ((#("		continue;
" 0 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 12 (fontified t)) . 1495) (undo-tree-id5057 . -10) (undo-tree-id5058 . -10) 1505) nil (25220 26085 232731 953000) 0 nil])
([nil nil ((1553 . 1559) (#("pivot" 0 5 (fontified nil)) . 1553) (1553 . 1558) (#("pivote : int" 0 12 (fontified nil)) . -1553) (1553 . 1565) (#("pivote" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1553) (undo-tree-id3529 . -5) (undo-tree-id3530 . -6) (undo-tree-id3531 . -6) 1559) ((1553 . 1559) (#("pivote : int" 0 12 (fontified nil)) . 1553) (1553 . 1565) (#("pivot" 0 5 (fontified nil)) . 1553) (1553 . 1558) (#("pivote" 0 6 (fontified t)) . 1553)) (25220 25534 473941 939000) 0 nil])
([nil nil ((1513 . 1515) (#("while" 0 5 (fontified t face font-lock-keyword-face)) . -1513) (undo-tree-id5017 . -5) (undo-tree-id5018 . -5) (undo-tree-id5019 . -5) (undo-tree-id5020 . -5) (undo-tree-id5021 . -5) (undo-tree-id5022 . -5) (undo-tree-id5023 . -5) (undo-tree-id5024 . -5) (undo-tree-id5025 . -5) (undo-tree-id5026 . -5) (undo-tree-id5027 . -5) (undo-tree-id5028 . -5) (undo-tree-id5029 . -5) (undo-tree-id5030 . -5) (undo-tree-id5031 . -5) (undo-tree-id5032 . -5) (undo-tree-id5033 . -5) (undo-tree-id5034 . -5) (undo-tree-id5035 . -5) (undo-tree-id5036 . -5) (undo-tree-id5037 . -5) (undo-tree-id5038 . -5) (undo-tree-id5039 . -5) (undo-tree-id5040 . -5) (undo-tree-id5041 . -5) (undo-tree-id5042 . -5) (undo-tree-id5043 . -5) (undo-tree-id5044 . -5) (undo-tree-id5045 . -5) (undo-tree-id5046 . -5) (undo-tree-id5047 . -5) (undo-tree-id5048 . -5) 1518 (1457 . 1459) (#("f" 0 1 (fontified t)) . -1457) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (#("i" 0 1 (fontified t)) . -1458) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) 1459 (1457 . 1459) (#("while" 0 1 (fontified t face font-lock-keyword-face) 1 5 (fontified t face font-lock-keyword-face)) . -1457) (undo-tree-id5053 . -5) 1462 (1502 . 1503) (#(":" 0 1 (fontified t)) . -1502) (undo-tree-id5054 . -1) 1503 (1502 . 1503) (1497 . 1502) (#("brea" 0 4 (fontified nil)) . 1497) (1497 . 1501) (#("break" 0 5 (fontified nil)) . -1497) (1497 . 1502) (#("brea" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1497) (undo-tree-id5055 . -4) (undo-tree-id5056 . -4) 1501 (1497 . 1501) (1495 . 1497) (1495 . 1496) 1500) nil (25220 26085 232714 730000) 0 nil])
([nil nil ((#("i--;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1659) (undo-tree-id3508 . -4) (undo-tree-id3510 . -4) (undo-tree-id3512 . -4) (undo-tree-id3514 . -4) (undo-tree-id3516 . -4) (undo-tree-id3518 . -4) (undo-tree-id3520 . -4) (undo-tree-id3522 . -4) (undo-tree-id3524 . -4) (undo-tree-id3526 . -4) (undo-tree-id3528 . -4) 1663) ((1659 . 1663)) (25220 25534 334536 189000) 0 nil])
([nil nil ((#("		break;
" 0 2 (fontified t) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t)) . 1569) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -9) (undo-tree-id4994 . -9) (undo-tree-id4995 . -9) (undo-tree-id4996 . -9) (undo-tree-id4997 . -9) (undo-tree-id4998 . -9) (undo-tree-id4999 . -9) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -2) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2) (undo-tree-id5013 . -2) (undo-tree-id5014 . -2) (undo-tree-id5015 . -2) (undo-tree-id5016 . -2) 1571) nil (25220 26085 232609 372000) 0 nil])
([nil nil ((#("inicio]) 
	    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t face (rainbow-delimiters-depth-3-face)) 8 9 (fontified t) 9 10 (fontified t) 10 15 (fontified t)) . -1644) (undo-tree-id3478 . -15) (undo-tree-id3480 . -15) (undo-tree-id3482 . -15) (undo-tree-id3484 . -15) (undo-tree-id3486 . -15) (undo-tree-id3488 . -15) (undo-tree-id3490 . -15) (undo-tree-id3492 . -15) (undo-tree-id3494 . -15) (undo-tree-id3496 . -15) (undo-tree-id3498 . -10) (undo-tree-id3500 . -15) (undo-tree-id3502 . -15) (undo-tree-id3504 . -15) (undo-tree-id3506 . -15) 1659) ((1644 . 1659)) (25220 25534 189223 181000) 0 nil])
([nil nil ((#("		break;
" 0 2 (fontified t) 2 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t)) . 1492) (undo-tree-id4965 . -2) (undo-tree-id4966 . -2) (undo-tree-id4967 . -2) (undo-tree-id4968 . -2) (undo-tree-id4969 . -2) (undo-tree-id4970 . -2) (undo-tree-id4971 . -2) (undo-tree-id4972 . -2) (undo-tree-id4973 . -2) (undo-tree-id4974 . -2) (undo-tree-id4975 . -2) (undo-tree-id4976 . -2) (undo-tree-id4977 . -2) (undo-tree-id4978 . -2) (undo-tree-id4979 . -2) (undo-tree-id4980 . -2) (undo-tree-id4981 . -2) (undo-tree-id4982 . -2) (undo-tree-id4983 . -2) (undo-tree-id4984 . -2) (undo-tree-id4985 . -2) (undo-tree-id4986 . -2) (undo-tree-id4987 . -2) (undo-tree-id4988 . -2) (undo-tree-id4989 . -2) (undo-tree-id4990 . -2) 1494) nil (25220 26085 232542 35000) 0 nil])
([nil nil ((#("arreglo[" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face))) . -1636) (undo-tree-id3441 . -8) (undo-tree-id3443 . -8) (undo-tree-id3445 . -8) (undo-tree-id3447 . -8) (undo-tree-id3449 . -8) (undo-tree-id3451 . -8) (undo-tree-id3453 . -8) (undo-tree-id3455 . -8) (undo-tree-id3457 . -8) (undo-tree-id3459 . -8) (undo-tree-id3461 . -8) (undo-tree-id3463 . -8) (undo-tree-id3465 . -8) (undo-tree-id3467 . -8) (undo-tree-id3469 . -8) (undo-tree-id3471 . -8) (undo-tree-id3473 . -8) (undo-tree-id3475 . -8) (undo-tree-id3477 . -8) 1644) ((1636 . 1644)) (25220 25534 31653 488000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 1506) (undo-tree-id5135 . 1) (undo-tree-id5136 . 1) (undo-tree-id5137 . 1) (undo-tree-id5138 . -1) (t 25220 26085 262607 384000)) nil (25220 26295 723544 628000) 0 nil])
([nil nil ((#("i] > " 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-4-face)) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1631) (undo-tree-id3396 . -5) (undo-tree-id3398 . -5) (undo-tree-id3400 . -5) (undo-tree-id3402 . -5) (undo-tree-id3404 . -5) (undo-tree-id3406 . -5) (undo-tree-id3408 . -5) (undo-tree-id3410 . -5) (undo-tree-id3412 . -5) (undo-tree-id3414 . -5) (undo-tree-id3416 . -5) (undo-tree-id3418 . -5) (undo-tree-id3420 . -5) (undo-tree-id3422 . -5) (undo-tree-id3424 . -5) (undo-tree-id3426 . -5) (undo-tree-id3428 . -5) (undo-tree-id3430 . -5) (undo-tree-id3432 . -5) (undo-tree-id3434 . -5) (undo-tree-id3436 . -5) (undo-tree-id3438 . -5) (undo-tree-id3440 . -5) 1636) ((1631 . 1636)) (25220 25533 925684 589000) 0 nil])
([nil nil ((1506 . 1507)) nil (25220 26295 723534 894000) 0 nil])
([nil nil ((#("arreglo[" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face))) . -1623) (undo-tree-id3343 . -8) (undo-tree-id3345 . -8) (undo-tree-id3347 . -8) (undo-tree-id3349 . -8) (undo-tree-id3351 . -8) (undo-tree-id3353 . -8) (undo-tree-id3355 . -8) (undo-tree-id3357 . -8) (undo-tree-id3359 . -8) (undo-tree-id3361 . -8) (undo-tree-id3363 . -8) (undo-tree-id3365 . -8) (undo-tree-id3367 . -8) (undo-tree-id3369 . -8) (undo-tree-id3371 . -8) (undo-tree-id3373 . -8) (undo-tree-id3375 . -8) (undo-tree-id3377 . -8) (undo-tree-id3379 . -8) (undo-tree-id3381 . -8) (undo-tree-id3383 . -8) (undo-tree-id3385 . -8) (undo-tree-id3387 . -8) (undo-tree-id3389 . -8) (undo-tree-id3391 . -8) (undo-tree-id3393 . -8) (undo-tree-id3395 . -8) 1631) ((1623 . 1631)) (25220 25533 745903 848000) 0 nil])
([nil nil ((#("i++;
	    }
	    " 0 4 (fontified t) 4 5 (fontified t) 5 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-4-face)) 11 12 (fontified t) 12 17 (fontified t)) . -1487) (undo-tree-id5132 . -17) 1504 (1508 . 1509) (#(" x" 0 2 (fontified nil)) . -1508) (1508 . 1510) (#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1508) (undo-tree-id5133 . -4) (undo-tree-id5134 . -4) (1504 . 1508) 1508 (1504 . 1508) (t 25220 26085 262607 384000)) nil (25220 26295 723530 792000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -1619) (undo-tree-id3051 . -1) (undo-tree-id3053 . -1) (undo-tree-id3055 . -1) (undo-tree-id3057 . -1) (undo-tree-id3059 . -1) (undo-tree-id3061 . -1) (undo-tree-id3063 . -1) (undo-tree-id3065 . -1) (undo-tree-id3067 . -1) (undo-tree-id3069 . -1) (undo-tree-id3071 . -1) (undo-tree-id3073 . -1) (undo-tree-id3075 . -1) (undo-tree-id3077 . -1) (undo-tree-id3079 . -1) (undo-tree-id3081 . -1) (undo-tree-id3083 . -1) (undo-tree-id3085 . -1) (undo-tree-id3087 . -1) (undo-tree-id3089 . -1) (undo-tree-id3091 . -1) (undo-tree-id3093 . -1) (undo-tree-id3095 . -1) (undo-tree-id3097 . -1) (undo-tree-id3099 . -1) (undo-tree-id3101 . -1) (undo-tree-id3103 . -1) (undo-tree-id3105 . -1) (undo-tree-id3107 . -1) (undo-tree-id3109 . -1) (undo-tree-id3111 . -1) (undo-tree-id3113 . -1) (undo-tree-id3115 . -1) (undo-tree-id3117 . -1) (undo-tree-id3119 . -1) (undo-tree-id3121 . -1) (undo-tree-id3123 . -1) (undo-tree-id3125 . -1) (undo-tree-id3127 . -1) (undo-tree-id3129 . -1) (undo-tree-id3131 . -1) (undo-tree-id3133 . -1) (undo-tree-id3135 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1620) (undo-tree-id3136 . -1) (undo-tree-id3138 . -1) (undo-tree-id3140 . -1) (undo-tree-id3142 . -1) (undo-tree-id3144 . -1) (undo-tree-id3146 . -1) (undo-tree-id3148 . -1) (undo-tree-id3150 . -1) (undo-tree-id3152 . -1) (undo-tree-id3154 . -1) (undo-tree-id3156 . -1) (undo-tree-id3158 . -1) (undo-tree-id3160 . -1) (undo-tree-id3162 . -1) (undo-tree-id3164 . -1) (undo-tree-id3166 . -1) (undo-tree-id3168 . -1) (undo-tree-id3170 . -1) (undo-tree-id3172 . -1) (undo-tree-id3174 . -1) (undo-tree-id3176 . -1) (undo-tree-id3178 . -1) (undo-tree-id3180 . -1) (undo-tree-id3182 . -1) (undo-tree-id3184 . -1) (undo-tree-id3186 . -1) (undo-tree-id3188 . -1) (undo-tree-id3190 . -1) (undo-tree-id3192 . -1) (undo-tree-id3194 . -1) (undo-tree-id3196 . -1) (undo-tree-id3198 . -1) (undo-tree-id3200 . -1) (undo-tree-id3202 . -1) (undo-tree-id3204 . -1) (undo-tree-id3206 . -1) (undo-tree-id3208 . -1) (undo-tree-id3210 . -1) (undo-tree-id3212 . -1) (#(" " 0 1 (fontified t)) . -1621) (undo-tree-id3213 . -1) (undo-tree-id3215 . -1) (undo-tree-id3217 . -1) (undo-tree-id3219 . -1) (undo-tree-id3221 . -1) (undo-tree-id3223 . -1) (undo-tree-id3225 . -1) (undo-tree-id3227 . -1) (undo-tree-id3229 . -1) (undo-tree-id3231 . -1) (undo-tree-id3233 . -1) (undo-tree-id3235 . -1) (undo-tree-id3237 . -1) (undo-tree-id3239 . -1) (undo-tree-id3241 . -1) (undo-tree-id3243 . -1) (undo-tree-id3245 . -1) (undo-tree-id3247 . -1) (undo-tree-id3249 . -1) (undo-tree-id3251 . -1) (undo-tree-id3253 . -1) (undo-tree-id3255 . -1) (undo-tree-id3257 . -1) (undo-tree-id3259 . -1) (undo-tree-id3261 . -1) (undo-tree-id3263 . -1) (undo-tree-id3265 . -1) (undo-tree-id3267 . -1) (undo-tree-id3269 . -1) (undo-tree-id3271 . -1) (undo-tree-id3273 . -1) (undo-tree-id3275 . -1) (undo-tree-id3277 . -1) (undo-tree-id3279 . -1) (undo-tree-id3281 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -1622) (undo-tree-id3282 . -1) (undo-tree-id3284 . -1) (undo-tree-id3286 . -1) (undo-tree-id3288 . -1) (undo-tree-id3290 . -1) (undo-tree-id3292 . -1) (undo-tree-id3294 . -1) (undo-tree-id3296 . -1) (undo-tree-id3298 . -1) (undo-tree-id3300 . -1) (undo-tree-id3302 . -1) (undo-tree-id3304 . -1) (undo-tree-id3306 . -1) (undo-tree-id3308 . -1) (undo-tree-id3310 . -1) (undo-tree-id3312 . -1) (undo-tree-id3314 . -1) (undo-tree-id3316 . -1) (undo-tree-id3318 . -1) (undo-tree-id3320 . -1) (undo-tree-id3322 . -1) (undo-tree-id3324 . -1) (undo-tree-id3326 . -1) (undo-tree-id3328 . -1) (undo-tree-id3330 . -1) (undo-tree-id3332 . -1) (undo-tree-id3334 . -1) (undo-tree-id3336 . -1) (undo-tree-id3338 . -1) (undo-tree-id3340 . -1) (undo-tree-id3342 . -1) 1623) ((1619 . 1623)) (25220 25533 589626 150000) 0 nil])
([nil nil ((#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1504) (undo-tree-id5129 . 4) (undo-tree-id5130 . -4) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 1504) (undo-tree-id5131 . 4) (1508 . 1512) (#(" x" 0 2 (fontified nil)) . 1508) (1508 . 1510) (#(" " 0 1 (fontified nil)) . 1508) (1487 . 1504)) nil (25220 26295 723513 709000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1617) (undo-tree-id3040 . -1) (undo-tree-id3042 . -1) (undo-tree-id3044 . -1) (undo-tree-id3046 . -1) (undo-tree-id3048 . -1) (undo-tree-id3050 . -1) 1618) ((1617 . 1618)) (25220 25533 439439 430000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1497) (undo-tree-id5112 . -1) (#("
" 0 1 (fontified t)) . -1498) (undo-tree-id5113 . -1) (#(" " 0 1 (fontified t)) . -1499) (undo-tree-id5114 . -1) (#(" " 0 1 (fontified t)) . -1500) (undo-tree-id5115 . -1) (#(" " 0 1 (fontified t)) . -1501) (undo-tree-id5116 . -1) (#(" " 0 1 (fontified t)) . -1502) (undo-tree-id5117 . -1) (#(" " 0 1 (fontified nil)) . -1503) (undo-tree-id5118 . -1) (#(" " 0 1 (fontified nil)) . -1504) (undo-tree-id5119 . -1) (#(" " 0 1 (fontified nil)) . -1505) (undo-tree-id5120 . -1) (#(" " 0 1 (fontified nil)) . -1506) (undo-tree-id5121 . -1) (#("	" 0 1 (fontified nil)) . 1507) (undo-tree-id5122 . -1) (1499 . 1507) 1500 (#(" " 0 1 (fontified nil)) . -1500) (undo-tree-id5123 . -1) (#(" " 0 1 (fontified t)) . -1501) (undo-tree-id5124 . -1) (#(" " 0 1 (fontified t)) . -1502) (undo-tree-id5125 . -1) (#(" " 0 1 (fontified t)) . -1503) (undo-tree-id5126 . -1) 1504 (1508 . 1509) (#(" x" 0 2 (fontified nil)) . -1508) (1508 . 1510) (#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1508) (undo-tree-id5127 . -4) (undo-tree-id5128 . -4) (1504 . 1508) 1508 (1504 . 1508) (t 25220 26085 262607 384000)) nil (25220 26295 723493 776000) 0 nil])
([nil nil ((#("inicio" 0 6 (fontified t)) . -1415) (undo-tree-id3543 . -6) 1421 (t 25220 25458 722731 669000)) ((1415 . 1421)) (25220 25533 253923 882000) 0 nil])
([nil nil ((#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1504) (undo-tree-id5109 . 4) (undo-tree-id5110 . -4) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 1504) (undo-tree-id5111 . 4) (1508 . 1512) (#(" x" 0 2 (fontified nil)) . 1508) (1508 . 1510) (#(" " 0 1 (fontified nil)) . 1508) (1500 . 1504) (#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1499) (1497 . 1508)) nil (25220 26295 723442 514000) 0 nil])
([nil nil ((1415 . 1418)) ((#("fin" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 1415)) (25220 25532 975633 725000) 0 nil])
([nil nil ((1612 . 1618) (#("p" 0 1 (fontified nil)) . 1612) (1612 . 1613) (#("pivote : int" 0 12 (fontified nil)) . -1612) (1612 . 1624) (#("piv" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1612) (undo-tree-id5070 . -3) (undo-tree-id5071 . -3) (undo-tree-id5072 . -3) 1615 (1613 . 1615) (1612 . 1613) (#("p" 0 1 (fontified t)) . -1612) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) 1613 (1608 . 1613) (1605 . 1608) (1598 . 1605) (#("arre" 0 4 (fontified nil)) . 1598) (1598 . 1602) (#("arreglo : int[]" 0 15 (fontified nil)) . -1598) (1598 . 1613) (#("arre" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t)) . -1598) (undo-tree-id5075 . -4) (undo-tree-id5076 . -4) 1602 (1594 . 1602) (1588 . 1594) (#("pivot" 0 5 (fontified nil)) . 1588) (1588 . 1593) (#("pivote : int" 0 12 (fontified nil)) . -1588) (1588 . 1600) (#("pivot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1588) (undo-tree-id5077 . -5) (undo-tree-id5078 . -5) 1593 (1582 . 1593) (1575 . 1582) (#("arre" 0 4 (fontified nil)) . 1575) (1575 . 1579) (#("arreglo : int[]" 0 15 (fontified nil)) . -1575) (1575 . 1590) (#("arre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1575) (undo-tree-id5079 . -4) (undo-tree-id5080 . -4) (undo-tree-id5081 . -4) 1579 (1578 . 1579) (1575 . 1578) (#("A" 0 1 (fontified t)) . -1575) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) 1576 (1575 . 1576) (1575 . 1576) (#("=" 0 1 (fontified t)) . -1575) (undo-tree-id5084 . -1) 1576 (1575 . 1576) (1574 . 1575) (1572 . 1574) (#("f" 0 1 (fontified t)) . -1572) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (#("i" 0 1 (fontified t)) . -1573) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) 1574 (1572 . 1574) (1571 . 1572) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1571) (undo-tree-id5089 . -4) (undo-tree-id5090 . -3) (1567 . 1571) 1571 (1566 . 1571) (1498 . 1499) (#("
" 0 1 (fontified t)) . -1498) (undo-tree-id5091 . -1) (#(" " 0 1 (fontified t)) . -1499) (undo-tree-id5092 . -1) (#(" " 0 1 (fontified t)) . -1500) (undo-tree-id5093 . -1) (#(" " 0 1 (fontified t)) . -1501) (undo-tree-id5094 . -1) (#(" " 0 1 (fontified t)) . -1502) (undo-tree-id5095 . -1) (#(" " 0 1 (fontified t)) . -1503) (undo-tree-id5096 . -1) (#(" " 0 1 (fontified t)) . -1504) (undo-tree-id5097 . -1) (#(" " 0 1 (fontified t)) . -1505) (undo-tree-id5098 . -1) (#(" " 0 1 (fontified nil)) . -1506) (undo-tree-id5099 . -1) (#("	" 0 1 (fontified nil)) . 1507) (undo-tree-id5100 . -1) (1499 . 1507) 1500 (#(" " 0 1 (fontified t)) . -1500) (undo-tree-id5101 . -1) (#(" " 0 1 (fontified t)) . -1501) (undo-tree-id5102 . -1) (#(" " 0 1 (fontified t)) . -1502) (undo-tree-id5103 . -1) (#(" " 0 1 (fontified t)) . -1503) (undo-tree-id5104 . -1) 1504 (1508 . 1509) (#(" x" 0 2 (fontified nil)) . -1508) (1499 . 1504) (#("	   " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1499) (1507 . 1509) (#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1507) (undo-tree-id5105 . -4) (undo-tree-id5106 . -4) (1503 . 1507) 1507 (1503 . 1507) (#(" " 0 1 (fontified t)) . -1503) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) 1504 (t 25220 26085 262607 384000)) nil (25220 26295 723406 598000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -1436) (undo-tree-id3544 . -1) (undo-tree-id3546 . -1) (undo-tree-id3548 . -1) (undo-tree-id3550 . -1) (undo-tree-id3552 . -1) (undo-tree-id3554 . -1) (undo-tree-id3556 . -1) (undo-tree-id3558 . -1) (undo-tree-id3560 . -1) (undo-tree-id3562 . -1) (undo-tree-id3564 . -1) (undo-tree-id3566 . -1) (undo-tree-id3568 . -1) (undo-tree-id3570 . -1) (undo-tree-id3572 . -1) (undo-tree-id3574 . -1) (undo-tree-id3576 . -1) (undo-tree-id3578 . -1) (undo-tree-id3580 . -1) (undo-tree-id3582 . -1) (undo-tree-id3584 . -1) (undo-tree-id3586 . -1) (undo-tree-id3588 . -1) (undo-tree-id3590 . -1) (undo-tree-id3592 . -1) (undo-tree-id3594 . -1) (undo-tree-id3596 . -1) (undo-tree-id3598 . -1) (undo-tree-id3600 . -1) (undo-tree-id3602 . -1) (undo-tree-id3604 . -1) (#("+" 0 1 (fontified t)) . -1437) (undo-tree-id3605 . -1) (undo-tree-id3607 . -1) (undo-tree-id3609 . -1) (undo-tree-id3611 . -1) (undo-tree-id3613 . -1) (undo-tree-id3615 . -1) (undo-tree-id3617 . -1) (undo-tree-id3619 . -1) (undo-tree-id3621 . -1) (undo-tree-id3623 . -1) (undo-tree-id3625 . -1) (undo-tree-id3627 . -1) (undo-tree-id3629 . -1) (undo-tree-id3631 . -1) (undo-tree-id3633 . -1) (undo-tree-id3635 . -1) (undo-tree-id3637 . -1) (undo-tree-id3639 . -1) (undo-tree-id3641 . -1) 1438 (t 25220 25483 987008 925000)) ((1436 . 1438) (t 25220 25494 918128 887000)) (25220 25494 890348 530000) 0 nil])
([nil nil ((1620 . 1622) (#("	    " 0 5 (fontified t)) . -1620) (undo-tree-id5061 . -5) (undo-tree-id5062 . -5) (undo-tree-id5063 . -5) (undo-tree-id5064 . -5) (undo-tree-id5065 . -5) (undo-tree-id5066 . -5) (undo-tree-id5067 . -5) (undo-tree-id5068 . -5) (undo-tree-id5069 . -5) 1625) nil (25220 26295 723287 720000) 0 nil])
nil
([nil nil ((#("inicio" 0 6 (fontified t)) . -1771) (undo-tree-id5140 . -6) 1777 (t 25220 26295 758916 602000)) nil (25220 26493 859139 697000) 0 nil])
([nil nil ((1771 . 1777)) nil (25220 26493 859132 159000) 0 nil])
([nil nil ((#("inicio" 0 6 (fontified t)) . -1771) (undo-tree-id5139 . -6) 1777 (t 25220 26295 758916 602000)) nil (25220 26493 859127 343000) 0 nil])
([nil nil ((1771 . 1772)) nil (25220 26493 859079 336000) 0 nil])
([nil nil ((#("inicio" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1733) (undo-tree-id5162 . -6) 1739 (t 25220 26493 888088 301000)) nil (25220 26503 749407 424000) 0 nil])
([nil nil ((1733 . 1734)) nil (25220 26503 749401 798000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1733) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) 1734) nil (25220 26503 749396 91000) 0 nil])
([nil nil ((1733 . 1734)) nil (25220 26503 749324 859000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1733) (undo-tree-id5169 . -1) 1734 (t 25220 26503 784196 773000)) nil (25220 26523 134658 73000) 0 nil])
([nil nil ((1733 . 1734)) nil (25220 26523 134652 68000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1733) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) 1734) nil (25220 26523 134648 702000) 0 nil])
([nil nil ((1733 . 1739)) nil (25220 26523 134641 721000) 0 nil])
([nil nil ((1733 . 1739) (#("inicio" 0 6 (fontified nil)) . 1733) (1733 . 1739) (#("inicio : int" 0 12 (fontified nil)) . -1733) (1733 . 1745) (#("inicio" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1733) (undo-tree-id5164 . -6) (undo-tree-id5165 . -6) (undo-tree-id5166 . -6) 1739) nil (25220 26523 134637 149000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1771) (undo-tree-id5163 . -1) 1772) nil (25220 26523 134622 888000) 0 nil])
([nil nil ((1771 . 1777)) nil (25220 26523 134592 936000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -1412) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (#("+" 0 1 (fontified t)) . -1413) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) 1414 (t 25220 26523 168409 238000)) nil (25220 26538 492149 969000) 0 nil])
([nil nil ((1412 . 1415)) nil (25220 26538 491832 826000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-warning-face)) . -1413) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (#("1" 0 1 (fontified t)) . -1414) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) 1415) nil (25220 26538 491818 143000) 0 nil])
([nil current ((1413 . 1416)) nil (25220 26538 491287 481000) 0 nil])
nil
